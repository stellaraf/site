{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/ml/dev/stellar/site/pages/cloud.js\",\n    _s2 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useRouter } from 'next/router';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { Box, Flex, Heading } from '@chakra-ui/core';\nimport useSWR from 'swr';\nimport { getPage, getPageContent } from '../util';\nimport { useColorMode, useTheme } from '../context';\nimport { USMap } from '../components/USMap';\nimport { Button } from '../components';\nimport { useActiveSection, usePageContent } from '../hooks';\nimport { _headerStyle } from '../state/atoms';\nconst heroBtn1Variant = {\n  dark: 'light',\n  light: 'primary'\n};\nconst headerBg = {\n  dark: 'transparent',\n  light: 'original.light'\n};\nconst sect1BtnText = {\n  dark: 'original.light',\n  light: 'original.dark'\n};\nconst gradientLight = {\n  backgroundColor: 'original.light'\n};\nconst gradientDark = {\n  background: 'rgb(22, 19, 24)',\n  background: 'linear-gradient(180deg, rgba(43, 60, 143, 1) 0%, rgba(42, 23, 74, 1) 50%, rgba(22, 19, 24, 1) 100%)'\n};\nconst gradient = {\n  dark: gradientDark,\n  light: gradientLight\n};\nconst commonDark = {\n  btnBorder: undefined,\n  btnVariant: 'solid',\n  btnHoverBg: 'whiteAlpha.500',\n  border: {\n    borderBottomColor: 'original.tertiary',\n    borderBottomWidth: '1px'\n  }\n};\nconst commonLight = {\n  btnVariant: 'outline',\n  btnBorder: 'black',\n  btnHoverBg: 'blackAlpha.50',\n  border: {}\n};\nconst variants = [{\n  dark: _objectSpread(_objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark), {}, {\n    otherProps: {\n      pt: '320px'\n    }\n  }),\n  light: _objectSpread(_objectSpread({\n    bg: 'original.light',\n    text: 'original.dark',\n    btnText: 'original.dark'\n  }, commonLight), {}, {\n    otherProps: {\n      pt: '320px'\n    }\n  })\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.tertiary',\n    text: 'original.dark',\n    btnText: 'original.dark'\n  }, commonLight)\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.primary',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonLight)\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonLight)\n}];\n\nconst useSectionStyle = idx => {\n  _s();\n\n  const {\n    colorMode\n  } = useColorMode();\n  return variants[idx][colorMode];\n};\n\n_s(useSectionStyle, \"2Uu86IH3do63pkN3s1ysdRMmJuc=\", false, function () {\n  return [useColorMode];\n});\n\nconst fetcher = async url => {\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Section = forwardRef(_c = _s2((_ref, ref) => {\n  _s2();\n\n  let {\n    items,\n    referenceItems,\n    index\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"items\", \"referenceItems\", \"index\"]);\n\n  const {\n    title,\n    subtitle,\n    body,\n    showButton,\n    buttonText,\n    buttonLink,\n    subsections\n  } = usePageContent(items, referenceItems);\n  const style = useSectionStyle(index);\n  return __jsx(Box, _extends({\n    ref: ref,\n    as: \"section\",\n    p: 24,\n    overflow: \"hidden\",\n    bg: style.bg,\n    color: style.text\n  }, style.border, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), __jsx(Flex, {\n    h: \"100%\",\n    overflow: \"hidden\",\n    px: 24,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, title, subtitle, body, subsections, showButton && __jsx(Button, {\n    href: buttonLink,\n    leftIcon: \"chevron-right\",\n    color: style.btnText,\n    variant: style.btnVariant,\n    borderColor: style.btnBorder,\n    _hover: {\n      backgroundColor: style.btnHoverBg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, buttonText)));\n}, \"apV6uh8arm35hoLSborkytpZspU=\", false, function () {\n  return [usePageContent, useSectionStyle];\n}));\n_c2 = Section;\n\nconst Cloud = ({\n  geoData,\n  geoPoints\n}) => {\n  _s5();\n\n  var _geoPoints$items,\n      _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$();\n\n  const {\n    pathname\n  } = useRouter();\n  const pageSlug = pathname.replace('/', '');\n  const {\n    data: pageData,\n    error: pageError\n  } = useSWR(pageSlug, getPage);\n  console.log(pageData, pageError);\n  pageError && console.error(pageError);\n  const {\n    data: contentData,\n    error: contentError\n  } = useSWR(pageData.id, getPageContent);\n  console.log(contentData, contentError, contentFetched, contentLoading);\n  contentError && console.error(contentError);\n  const sections = contentData.items;\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    colors\n  } = useTheme();\n  const mapColor = {\n    dark: colors.whiteAlpha[200],\n    light: colors.blackAlpha[200]\n  };\n  const markerColor = {\n    dark: colors.green[400],\n    light: colors.primary[400]\n  };\n  const [headerStyle, setHeaderStyle] = useRecoilState(_headerStyle);\n  const heroRef = useRef();\n  const locations = geoPoints === null || geoPoints === void 0 ? void 0 : (_geoPoints$items = geoPoints.items) === null || _geoPoints$items === void 0 ? void 0 : _geoPoints$items.map(loc => loc.fields);\n  const sectionRefs = sections.map(_s3(() => {\n    _s3();\n\n    return useRef();\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\"));\n  useEffect(() => {\n    setHeaderStyle({\n      bg: headerBg[colorMode],\n      color: sect1BtnText[colorMode]\n    });\n  }, [colorMode]);\n  useActiveSection(headerStyle, setHeaderStyle, {\n    bg: headerBg[colorMode],\n    color: sect1BtnText[colorMode]\n  }, [headerStyle, colorMode], sectionRefs.map(_s4((ref, i) => {\n    _s4();\n\n    const idx = i % variants.length;\n    const style = useSectionStyle(idx);\n    return [ref, {\n      bg: style.bg,\n      color: style.text\n    }];\n  }, \"8c3ikFwVUbmOQxE/HKeNhpN5S0g=\", false, function () {\n    return [useSectionStyle];\n  })));\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    ref: heroRef,\n    w: \"100%\",\n    minH: \"80vh\",\n    background: gradient[colorMode],\n    px: 24,\n    pt: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    flexDir: \"column\",\n    alignItems: \"center\",\n    mt: [4, 4, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    textAlign: \"center\",\n    flexDir: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h1\",\n    fontSize: \"6xl\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Orion\"), __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"3xl\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"The Enterprise Native Cloud\"), __jsx(Heading, {\n    as: \"h3\",\n    mt: 8,\n    fontSize: \"lg\",\n    fontWeight: \"normal\",\n    maxW: [null, null, '75%'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Our strategically located data centers allow enterprises to substantially reduce latency between end-users and business applications.\"), __jsx(Flex, {\n    justifyContent: \"center\",\n    w: \"100%\",\n    flexWrap: \"wrap\",\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    mx: 4,\n    href: \"#\",\n    boxShadow: \"md\",\n    variantColor: heroBtn1Variant[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Find Your Edge Data Center\"), __jsx(Button, {\n    mx: 4,\n    href: \"#\",\n    color: sect1BtnText[colorMode],\n    boxShadow: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Learn More\")))), __jsx(USMap, {\n    maxW: \"75%\",\n    geoData: geoData,\n    locations: locations,\n    mapColor: mapColor[colorMode],\n    markerColor: markerColor[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })), sectionRefs.map((ref, i) => {\n    return __jsx(Section, {\n      ref: ref,\n      items: sections[i],\n      referenceItems: content.includes,\n      index: i % variants.length,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\n_s5(Cloud, \"qu6Q9W5qOOWSBB3RQtDkPn2Is20=\", false, function () {\n  return [useRouter, useSWR, useSWR, useColorMode, useTheme, useRecoilState, useActiveSection];\n});\n\n_c3 = Cloud;\nexport var __N_SSG = true;\nexport default Cloud; // export const getStaticProps = async ctx => {\n//   let contentUrl = '';\n//   let geoData = {};\n//   // let content = {};\n//   let geoPoints = {};\n//   contentUrl = [\n//     process.env.CONTENTFUL_BASEURL,\n//     '/',\n//     process.env.CONTENTFUL_SPACE,\n//     '/entries',\n//     '?access_token=',\n//     process.env.CONTENTFUL_KEY,\n//   ].join('');\n//   try {\n//     const geoRes = await fetch('https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json');\n//     // const contentRes = await fetch(\n//     //   [\n//     //     contentUrl,\n//     //     '&content_type=pageContent',\n//     //     '&fields.page[in]=cloud',\n//     //     '&order=fields.sortWeight',\n//     //   ].join(''),\n//     // );\n//     const geoPointsRes = await fetch(`${contentUrl}&content_type=orionLocation`);\n//     geoData = await geoRes.json();\n//     geoPoints = await geoPointsRes.json();\n//     // content = await contentRes.json();\n//   } catch (err) {\n//     console.error(err);\n//   }\n//   return { props: { geoData, geoPoints } };\n// };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Section$forwardRef\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"Cloud\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/pages/cloud.js"],"names":["React","useRouter","useEffect","useRef","forwardRef","useRecoilState","Box","Flex","Heading","useSWR","getPage","getPageContent","useColorMode","useTheme","USMap","Button","useActiveSection","usePageContent","_headerStyle","heroBtn1Variant","dark","light","headerBg","sect1BtnText","gradientLight","backgroundColor","gradientDark","background","gradient","commonDark","btnBorder","undefined","btnVariant","btnHoverBg","border","borderBottomColor","borderBottomWidth","commonLight","variants","bg","text","btnText","otherProps","pt","useSectionStyle","idx","colorMode","fetcher","url","response","fetch","json","err","console","error","Section","ref","items","referenceItems","index","props","title","subtitle","body","showButton","buttonText","buttonLink","subsections","style","Cloud","geoData","geoPoints","pathname","pageSlug","replace","data","pageData","pageError","log","contentData","contentError","id","contentFetched","contentLoading","sections","colors","mapColor","whiteAlpha","blackAlpha","markerColor","green","primary","headerStyle","setHeaderStyle","heroRef","locations","map","loc","fields","sectionRefs","color","i","length","content","includes"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRouter } from 'next/router';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { Box, Flex, Heading } from '@chakra-ui/core';\nimport useSWR from 'swr';\nimport { getPage, getPageContent, contentQuery } from '../util';\nimport { useColorMode, useTheme } from '../context';\nimport { USMap } from '../components/USMap';\nimport { Button } from '../components';\nimport { useActiveSection, usePageContent } from '../hooks';\nimport { _headerStyle } from '../state/atoms';\n\nconst heroBtn1Variant = { dark: 'light', light: 'primary' };\n\nconst headerBg = { dark: 'transparent', light: 'original.light' };\nconst sect1BtnText = { dark: 'original.light', light: 'original.dark' };\n\nconst gradientLight = { backgroundColor: 'original.light' };\n\nconst gradientDark = {\n  background: 'rgb(22, 19, 24)',\n  background:\n    'linear-gradient(180deg, rgba(43, 60, 143, 1) 0%, rgba(42, 23, 74, 1) 50%, rgba(22, 19, 24, 1) 100%)',\n};\n\nconst gradient = { dark: gradientDark, light: gradientLight };\n\nconst commonDark = {\n  btnBorder: undefined,\n  btnVariant: 'solid',\n  btnHoverBg: 'whiteAlpha.500',\n  border: { borderBottomColor: 'original.tertiary', borderBottomWidth: '1px' },\n};\n\nconst commonLight = {\n  btnVariant: 'outline',\n  btnBorder: 'black',\n  btnHoverBg: 'blackAlpha.50',\n  border: {},\n};\n\nconst variants = [\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n      otherProps: { pt: '320px' },\n    },\n    light: {\n      bg: 'original.light',\n      text: 'original.dark',\n      btnText: 'original.dark',\n      ...commonLight,\n      otherProps: { pt: '320px' },\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.tertiary',\n      text: 'original.dark',\n      btnText: 'original.dark',\n      ...commonLight,\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.primary',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonLight,\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonLight,\n    },\n  },\n];\nconst useSectionStyle = idx => {\n  const { colorMode } = useColorMode();\n  return variants[idx][colorMode];\n};\n\nconst fetcher = async url => {\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Section = forwardRef(({ items, referenceItems, index, ...props }, ref) => {\n  const { title, subtitle, body, showButton, buttonText, buttonLink, subsections } = usePageContent(\n    items,\n    referenceItems,\n  );\n  const style = useSectionStyle(index);\n\n  return (\n    <Box\n      ref={ref}\n      as=\"section\"\n      p={24}\n      overflow=\"hidden\"\n      bg={style.bg}\n      color={style.text}\n      {...style.border}\n      {...props}>\n      <Flex h=\"100%\" overflow=\"hidden\" px={24} alignItems=\"center\" flexDir=\"column\">\n        {title}\n        {subtitle}\n        {body}\n        {subsections}\n        {showButton && (\n          <Button\n            href={buttonLink}\n            leftIcon=\"chevron-right\"\n            color={style.btnText}\n            variant={style.btnVariant}\n            borderColor={style.btnBorder}\n            _hover={{\n              backgroundColor: style.btnHoverBg,\n            }}>\n            {buttonText}\n          </Button>\n        )}\n      </Flex>\n    </Box>\n  );\n});\n\nconst Cloud = ({ geoData, geoPoints }) => {\n  const { pathname } = useRouter();\n  const pageSlug = pathname.replace('/', '');\n  const { data: pageData, error: pageError } = useSWR(pageSlug, getPage);\n  console.log(pageData, pageError);\n  pageError && console.error(pageError);\n  const { data: contentData, error: contentError } = useSWR(pageData.id, getPageContent);\n  console.log(contentData, contentError, contentFetched, contentLoading);\n  contentError && console.error(contentError);\n  const sections = contentData.items;\n  const { colorMode } = useColorMode();\n  const { colors } = useTheme();\n  const mapColor = { dark: colors.whiteAlpha[200], light: colors.blackAlpha[200] };\n  const markerColor = { dark: colors.green[400], light: colors.primary[400] };\n  const [headerStyle, setHeaderStyle] = useRecoilState(_headerStyle);\n  const heroRef = useRef();\n  const locations = geoPoints?.items?.map(loc => loc.fields);\n\n  const sectionRefs = sections.map(() => {\n    return useRef();\n  });\n\n  useEffect(() => {\n    setHeaderStyle({ bg: headerBg[colorMode], color: sect1BtnText[colorMode] });\n  }, [colorMode]);\n\n  useActiveSection(\n    headerStyle,\n    setHeaderStyle,\n    { bg: headerBg[colorMode], color: sect1BtnText[colorMode] },\n    [headerStyle, colorMode],\n    sectionRefs.map((ref, i) => {\n      const idx = i % variants.length;\n      const style = useSectionStyle(idx);\n      return [ref, { bg: style.bg, color: style.text }];\n    }),\n  );\n  return (\n    <>\n      <Box ref={heroRef} w=\"100%\" minH=\"80vh\" background={gradient[colorMode]} px={24} pt={32}>\n        <Flex flexDir=\"column\" alignItems=\"center\" mt={[4, 4, 8]}>\n          <Flex textAlign=\"center\" flexDir=\"column\" alignItems=\"center\">\n            <Heading as=\"h1\" fontSize=\"6xl\" fontWeight=\"light\">\n              Orion\n            </Heading>\n            <Heading as=\"h2\" fontSize=\"3xl\" fontWeight=\"light\">\n              The Enterprise Native Cloud\n            </Heading>\n            <Heading as=\"h3\" mt={8} fontSize=\"lg\" fontWeight=\"normal\" maxW={[null, null, '75%']}>\n              Our strategically located data centers allow enterprises to substantially reduce\n              latency between end-users and business applications.\n            </Heading>\n            <Flex justifyContent=\"center\" w=\"100%\" flexWrap=\"wrap\" mt={8}>\n              <Button mx={4} href=\"#\" boxShadow=\"md\" variantColor={heroBtn1Variant[colorMode]}>\n                Find Your Edge Data Center\n              </Button>\n              <Button mx={4} href=\"#\" color={sect1BtnText[colorMode]} boxShadow=\"md\">\n                Learn More\n              </Button>\n            </Flex>\n          </Flex>\n        </Flex>\n        <USMap\n          maxW=\"75%\"\n          geoData={geoData}\n          locations={locations}\n          mapColor={mapColor[colorMode]}\n          markerColor={markerColor[colorMode]}\n        />\n      </Box>\n      {sectionRefs.map((ref, i) => {\n        return (\n          <Section\n            ref={ref}\n            items={sections[i]}\n            referenceItems={content.includes}\n            index={i % variants.length}\n            key={i}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Cloud;\n\n// export const getStaticProps = async ctx => {\n//   let contentUrl = '';\n//   let geoData = {};\n//   // let content = {};\n//   let geoPoints = {};\n//   contentUrl = [\n//     process.env.CONTENTFUL_BASEURL,\n//     '/',\n//     process.env.CONTENTFUL_SPACE,\n//     '/entries',\n//     '?access_token=',\n//     process.env.CONTENTFUL_KEY,\n//   ].join('');\n\n//   try {\n//     const geoRes = await fetch('https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json');\n//     // const contentRes = await fetch(\n//     //   [\n//     //     contentUrl,\n//     //     '&content_type=pageContent',\n//     //     '&fields.page[in]=cloud',\n//     //     '&order=fields.sortWeight',\n//     //   ].join(''),\n//     // );\n//     const geoPointsRes = await fetch(`${contentUrl}&content_type=orionLocation`);\n//     geoData = await geoRes.json();\n//     geoPoints = await geoPointsRes.json();\n//     // content = await contentRes.json();\n//   } catch (err) {\n//     console.error(err);\n//   }\n//   return { props: { geoData, geoPoints } };\n// };\n\nexport const getStaticProps = async ctx => {\n  let contentUrl = '';\n  let geoData = {};\n  let geoPoints = {};\n  contentUrl = [\n    process.env.CONTENTFUL_BASEURL,\n    '/',\n    process.env.CONTENTFUL_SPACE,\n    '/entries',\n    '?access_token=',\n    process.env.CONTENTFUL_KEY,\n  ].join('');\n\n  try {\n    const geoRes = await fetch('https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json');\n    geoData = await geoRes.json();\n    geoPoints = await contentQuery('orionLocation');\n  } catch (err) {\n    console.error(err);\n  }\n  return { props: { geoData, geoPoints } };\n};\n"]},"metadata":{},"sourceType":"module"}