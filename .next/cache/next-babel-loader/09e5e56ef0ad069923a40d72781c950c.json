{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/ml/dev/stellar/site/components/Nav/Navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useRouter } from 'next/router';\nimport { Box, Flex, PseudoBox } from '@chakra-ui/core';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Link } from '../Link';\nimport { useConfig, useTheme, useColorMode, useGlobalState } from '../../context';\nconst bg = {\n  dark: 'original.dark',\n  light: 'original.primary'\n};\nconst accent = {\n  dark: 'original.tertiary',\n  light: 'blackAlpha.300'\n};\nconst variant = {\n  dark: 'tertiary',\n  light: 'gray'\n};\nconst text = {\n  dark: 'light.200',\n  light: 'blackAlpha.800'\n};\nconst textHover = {\n  dark: 'light.50',\n  light: 'blackAlpha.600'\n};\n\nconst Header = props => {\n  _s();\n\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    headerStyle\n  } = useGlobalState();\n  return __jsx(Box, _extends({\n    as: \"header\",\n    pos: \"fixed\",\n    height: 32,\n    top: 0,\n    left: 0,\n    right: 0,\n    w: \"100%\",\n    zIndex: 1000,\n    transition: {\n      transition: 'all 200ms ease-in'\n    },\n    bg: \"transparent\"\n  }, headerStyle, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(Header, \"lkbzqCWcS4+/4lJEruGa826THUs=\", false, function () {\n  return [useColorMode, useGlobalState];\n});\n\n_c = Header;\n\nconst Navbar = props => {\n  return __jsx(Flex, _extends({\n    as: \"nav\",\n    pos: \"relative\",\n    px: 24,\n    py: 8,\n    alignItems: \"center\",\n    flexDir: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c2 = Navbar;\n\nconst ItemGroup = props => __jsx(Flex, _extends({\n  flex: \"1 0 0\",\n  alignItems: \"center\",\n  pointerEvents: \"auto\",\n  justifyContent: props.center ? 'center' : 'flex-end'\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}));\n\n_c3 = ItemGroup;\nconst activeProps = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  width: '50%',\n  height: '2px',\n  borderRadius: '0.75rem',\n  content: '\"\"',\n  transition: 'width: 0.5s, opacity: 0.5s, transform 0.5s',\n  transform: 'translateY(-10px)'\n};\n\nconst NavLink = (_ref) => {\n  _s2();\n\n  let {\n    isActive\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isActive\"]);\n\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    headerStyle\n  } = useGlobalState();\n  return __jsx(Link, _extends({\n    p: 4,\n    mr: 8,\n    pos: \"relative\" // color={text[colorMode]}\n    ,\n    fontWeight: \"medium\",\n    transition: \"all 0.2s\",\n    _hover: {\n      color: textHover[colorMode],\n      textDecoration: 'none',\n      transform: `translateY(-2px)`\n    },\n    _after: isActive ? _objectSpread({\n      backgroundColor: accent[colorMode]\n    }, activeProps) : null\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s2(NavLink, \"lkbzqCWcS4+/4lJEruGa826THUs=\", false, function () {\n  return [useColorMode, useGlobalState];\n});\n\n_c4 = NavLink;\n\nconst Items = ({\n  side\n}) => {\n  _s3();\n\n  const {\n    pathname\n  } = useRouter();\n  const navItems = [];\n  const {\n    nav\n  } = useConfig();\n  nav[side].map(item => {\n    navItems.push(__jsx(NavLink, {\n      key: item.link,\n      href: item.link,\n      isActive: pathname === item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, item.title));\n  });\n  return navItems;\n};\n\n_s3(Items, \"+9TxviP6hp/HIL+7dNgbu8eTn4A=\", false, function () {\n  return [useRouter, useConfig];\n});\n\n_c5 = Items;\nconst btnBorder = {\n  dark: 'original.tertiary',\n  light: 'blackAlpha.800'\n};\n\nconst ContactButton = props => {\n  _s4();\n\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(Button, _extends({\n    href: \"/contact\",\n    borderWidth: \"1px\",\n    borderColor: \"transparent\",\n    _hover: {\n      backgroundColor: 'transparent',\n      color: btnBorder[colorMode],\n      borderColor: btnBorder[colorMode],\n      borderWidth: '1px'\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), \"Talk to Us\");\n};\n\n_s4(ContactButton, \"2Uu86IH3do63pkN3s1ysdRMmJuc=\", false, function () {\n  return [useColorMode];\n});\n\n_c6 = ContactButton;\nexport const NavbarDesktop = props => {\n  _s5();\n\n  const {\n    pathname\n  } = useRouter();\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    colors\n  } = useTheme();\n  const logo = {\n    dark: 'white',\n    light: 'white'\n  };\n  return __jsx(Header, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }), __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, !pathname === '/' && __jsx(Logo.Typographic, {\n    color: logo[colorMode],\n    width: 160,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  })), __jsx(ItemGroup, {\n    center: pathname === '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(Items, {\n    side: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), __jsx(Items, {\n    side: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), __jsx(NavLink, {\n    href: \"https://docs.stellar.tech\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Docs\"), __jsx(ContactButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s5(NavbarDesktop, \"yEe4I+J7X/TS+sQwXbLGA4W4jTk=\", false, function () {\n  return [useRouter, useColorMode, useTheme];\n});\n\n_c7 = NavbarDesktop;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Navbar\");\n$RefreshReg$(_c3, \"ItemGroup\");\n$RefreshReg$(_c4, \"NavLink\");\n$RefreshReg$(_c5, \"Items\");\n$RefreshReg$(_c6, \"ContactButton\");\n$RefreshReg$(_c7, \"NavbarDesktop\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/components/Nav/Navbar.js"],"names":["React","useRouter","Box","Flex","PseudoBox","Logo","Button","Link","useConfig","useTheme","useColorMode","useGlobalState","bg","dark","light","accent","variant","text","textHover","Header","props","colorMode","headerStyle","transition","Navbar","ItemGroup","center","activeProps","position","left","right","bottom","marginLeft","marginRight","width","height","borderRadius","content","transform","NavLink","isActive","color","textDecoration","backgroundColor","Items","side","pathname","navItems","nav","map","item","push","link","title","btnBorder","ContactButton","borderColor","borderWidth","NavbarDesktop","colors","logo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRouter } from 'next/router';\nimport { Box, Flex, PseudoBox } from '@chakra-ui/core';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Link } from '../Link';\nimport { useConfig, useTheme, useColorMode, useGlobalState } from '../../context';\n\nconst bg = { dark: 'original.dark', light: 'original.primary' };\nconst accent = { dark: 'original.tertiary', light: 'blackAlpha.300' };\nconst variant = { dark: 'tertiary', light: 'gray' };\nconst text = { dark: 'light.200', light: 'blackAlpha.800' };\nconst textHover = { dark: 'light.50', light: 'blackAlpha.600' };\n\nconst Header = props => {\n  const { colorMode } = useColorMode();\n  const { headerStyle } = useGlobalState();\n  return (\n    <Box\n      as=\"header\"\n      pos=\"fixed\"\n      height={32}\n      top={0}\n      left={0}\n      right={0}\n      w=\"100%\"\n      zIndex={1000}\n      transition={{ transition: 'all 200ms ease-in' }}\n      bg=\"transparent\"\n      {...headerStyle}\n      {...props}\n    />\n  );\n};\n\nconst Navbar = props => {\n  return (\n    <Flex\n      as=\"nav\"\n      pos=\"relative\"\n      px={24}\n      py={8}\n      alignItems=\"center\"\n      flexDir=\"row\"\n      flexWrap=\"nowrap\"\n      justifyContent=\"flex-start\"\n      {...props}\n    />\n  );\n};\n\nconst ItemGroup = props => (\n  <Flex\n    flex=\"1 0 0\"\n    alignItems=\"center\"\n    pointerEvents=\"auto\"\n    justifyContent={props.center ? 'center' : 'flex-end'}\n    {...props}\n  />\n);\n\nconst activeProps = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  width: '50%',\n  height: '2px',\n  borderRadius: '0.75rem',\n  content: '\"\"',\n  transition: 'width: 0.5s, opacity: 0.5s, transform 0.5s',\n  transform: 'translateY(-10px)',\n};\n\nconst NavLink = ({ isActive, ...props }) => {\n  const { colorMode } = useColorMode();\n  const { headerStyle } = useGlobalState();\n  return (\n    <Link\n      p={4}\n      mr={8}\n      pos=\"relative\"\n      // color={text[colorMode]}\n      fontWeight=\"medium\"\n      transition=\"all 0.2s\"\n      _hover={{\n        color: textHover[colorMode],\n        textDecoration: 'none',\n        transform: `translateY(-2px)`,\n      }}\n      _after={isActive ? { backgroundColor: accent[colorMode], ...activeProps } : null}\n      {...props}\n    />\n  );\n};\n\nconst Items = ({ side }) => {\n  const { pathname } = useRouter();\n  const navItems = [];\n  const { nav } = useConfig();\n  nav[side].map(item => {\n    navItems.push(\n      <NavLink key={item.link} href={item.link} isActive={pathname === item.link}>\n        {item.title}\n      </NavLink>,\n    );\n  });\n  return navItems;\n};\n\nconst btnBorder = { dark: 'original.tertiary', light: 'blackAlpha.800' };\n\nconst ContactButton = props => {\n  const { colorMode } = useColorMode();\n  return (\n    <Button\n      href=\"/contact\"\n      borderWidth=\"1px\"\n      borderColor=\"transparent\"\n      _hover={{\n        backgroundColor: 'transparent',\n        color: btnBorder[colorMode],\n        borderColor: btnBorder[colorMode],\n        borderWidth: '1px',\n      }}\n      {...props}>\n      Talk to Us\n    </Button>\n  );\n};\n\nexport const NavbarDesktop = props => {\n  const { pathname } = useRouter();\n  const { colorMode } = useColorMode();\n  const { colors } = useTheme();\n  const logo = { dark: 'white', light: 'white' };\n  return (\n    <Header {...props}>\n      <Navbar>\n        <Link href=\"/\">\n          {!pathname === '/' && <Logo.Typographic color={logo[colorMode]} width={160} />}\n        </Link>\n        <ItemGroup center={pathname === '/'}>\n          <Items side=\"left\" />\n          <Items side=\"right\" />\n          <NavLink href=\"https://docs.stellar.tech\">Docs</NavLink>\n          <ContactButton />\n        </ItemGroup>\n      </Navbar>\n    </Header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}