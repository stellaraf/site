{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/src/components/navbar/NavBarMobile.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Button, Container, Navbar, ListGroup } from \"react-bootstrap\"; // import { Link } from \"wouter\";\n\nimport Link from \"next/link\";\nimport Hamburger from \"components/navbar/Hamburger\";\nimport styled from \"styled-components\";\nimport Logo from \"components/svg/Logos\";\nimport bp from \"utils/breakpoints\";\nimport site from \"config\";\nimport theme from \"styles/exports.module.scss\";\nconst NavWrapper = styled.div`\n  position: fixed !important;\n  height: 86px;\n  top: 0;\n  width: 100%;\n  z-index: 1000 !important;\n  background-color: transparent !important;\n`;\nconst ContactButton = styled(Button)`\n  border: ${theme.cardBorderWidth} solid ${theme.navCardBorderColor} !important;\n  white-space: nowrap;\n  color: ${theme.navLinkColor} !important;\n  :hover {\n    color: ${theme.stDark} !important;\n  }\n`;\nconst NavBarContent = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1;\n  padding-left: 15px;\n  padding-right: 15px;\n  align-content: center;\n  justify-content: space-between;\n`;\nconst ExtLink = styled.a`\n  color: ${props => props.isLocation ? theme.stSecondary : theme.stWhite};\n  font-weight: ${props => props.isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  font-size: ${theme.fontSizeLg};\n  text-decoration: none;\n  :hover {\n    color: inherit;\n    text-decoration: none !important;\n  }\n`;\nconst NavBarLink = styled((_ref) => {\n  let {\n    isLocation\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isLocation\"]);\n\n  return __jsx(Link, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 57\n    }\n  }));\n})`\n  position: relative;\n  display: inline-block;\n  padding: ${theme.navLinkPaddingX};\n  text-decoration: none;\n  color: ${({\n  isLocation\n}) => isLocation ? theme.stSecondary : theme.navLinkColor};\n  font-weight: ${({\n  isLocation\n}) => isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  transition: color 0.5s, font-weight 0.5s;\n\n  &:hover {\n    color: ${({\n  isLocation\n}) => isLocation ? theme.stSecondary : theme.stWhite} !important;\n  }\n\n  ::before {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    height: ${({\n  isLocation\n}) => isLocation ? \"2px\" : 0};\n    background: ${theme.stSecondary};\n    content: \"\";\n    opacity: ${({\n  isLocation\n}) => isLocation ? 1 : 0};\n    transition: width 0.5s, opacity 0.5s, transform 0.5s;\n  }\n  ${bp.down(\"md\")} {\n    padding: 0.5rem;\n  }\n`;\n\nfunction NavBarItems({\n  side,\n  location,\n  className\n}) {\n  let navItems = [];\n  let navConfig = site.newNav[side];\n  navConfig.map((item, i) => {\n    navItems.push(__jsx(NavBarLink, {\n      key: i,\n      className: className,\n      isLocation: location === item.link ? true : false,\n      href: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, item.title));\n    return null;\n  });\n  return navItems;\n}\n\nconst NavMenuWrapper = styled(Container)`\n  width: 100%;\n  position: relative;\n  background-color: ${theme.stDark};\n  color: ${theme.stWhite};\n  padding-top: 1.5rem !important;\n  min-height: 100vh;\n  overflow-y: hidden;\n  z-index: 2;\n  border-top: ${theme.navbarBottomBorder};\n`;\nconst NavMenuGroup = styled(ListGroup)`\n  margin-top: 1.5rem;\n  width: 100%;\n\n  .list-group-item:first-child {\n    border-top: none;\n  }\n  .list-group-item:last-child {\n    border-bottom: none;\n    border-top: 1px solid ${theme.hamburgerLinkBorder} !important;\n  }\n  .list-group-item:not(:first-child):not(:last-child) {\n    border-top: 1px solid ${theme.hamburgerLinkBorder} !important;\n  }\n  .list-group-item {\n    padding: 2rem 1.25rem;\n    border: none;\n    background-color: transparent;\n    border-radius: 0 !important;\n    transition: background-color 0.2s ease;\n  }\n  .list-group-item:hover,\n  .list-group-item:active,\n  .list-group-item.active {\n    background-color: ${theme.hamburgerLinkHoverBackground} !important;\n    border-color: unset;\n  }\n`;\nconst NavMenuItem = styled((_ref2) => {\n  let {\n    isLocation,\n    href,\n    className\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"isLocation\", \"href\", \"className\"]);\n\n  return __jsx(Link, _extends({\n    className: className,\n    href: href,\n    active: isLocation.toString()\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 3\n    }\n  }));\n})`\n  color: ${props => props.isLocation ? theme.stSecondary : theme.stWhite};\n  font-weight: ${props => props.isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  font-size: ${theme.fontSizeLg};\n  text-decoration: none;\n  :hover {\n    color: inherit;\n    text-decoration: none !important;\n  }\n`;\n\nfunction NavMenuContent({\n  location,\n  closeNav\n}) {\n  let navConfig = site.newNav.left.concat(site.newNav.right);\n  return __jsx(NavMenuWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(ContactButton, {\n    href: \"/contact\",\n    variant: \"outline-light\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, site.pages.contact.title), __jsx(NavMenuGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, navConfig.map((item, i) => {\n    return __jsx(NavMenuItem, {\n      className: `list-group-item ${location === item.link ? \"active\" : \"\"}`,\n      key: i,\n      href: item.link,\n      isLocation: location === item.link ? true : false,\n      onClick: closeNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, item.title);\n  }), __jsx(ExtLink, {\n    className: \"list-group-item\",\n    href: \"https://docs.stellar.tech\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Docs\")));\n}\n\nconst MobileNav = styled((_ref3) => {\n  let {\n    position,\n    background,\n    top,\n    itemsVisible,\n    expanded\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"position\", \"background\", \"top\", \"itemsVisible\", \"expanded\"]);\n\n  return __jsx(Navbar, _extends({\n    variant: \"transparent\",\n    expanded: expanded\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }));\n})`\n    display: flex !important;\n    flex: 1 0 100% !important;\n    flex-wrap: wrap !important;\n    justify-content: space-between !important;\n    align-items: center !important;\n    padding: 0 !important;\n    height: 86px;\n    font-size: ${theme.fontSizeSm};\n    // border-bottom: ${theme.navbarBottomBorder};\n    background-color: transparent;\n\n    &.home {\n        background-color: ${theme.stPrimary};\n    }\n\n    &.sticky.home {\n        background-color: ${theme.stPrimary};\n    }\n\n    &.sticky {\n        background-color: ${theme.stDark};\n    }\n`;\nconst NavBarLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n  height: 86px;\n  transition: all 0.2s ease;\n  transform: translate3d(2%, 8%, 0);\n  transform-origin: bottom;\n\n  &.logo-m.in-nav {\n    opacity: 1;\n    pointer-events: auto;\n    visibility: visible;\n  }\n`;\nconst NavMenuToggle = styled(Navbar.Toggle)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  pointer-events: auto;\n  opacity: 1;\n  visibility: visible;\n  transition: all 0.2s ease;\n  transform-origin: right;\n  padding-top: 1rem !important;\n  padding-right: 0.75rem !important;\n  padding-bottom: 0.5rem !important;\n  padding-left: 0.25rem !important;\n`;\nconst NavMenu = styled(Navbar.Collapse)`\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n`;\nexport default function MobileNavBar({\n  navOpen,\n  setNavOpen,\n  pathName,\n  doScroll\n}) {\n  const isHome = pathName === \"/\" ? true : false;\n\n  const handleNavClose = () => setNavOpen(false);\n\n  const handleNavClick = e => setNavOpen(e); // Render\n\n\n  return __jsx(NavWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, __jsx(MobileNav, {\n    id: \"navbar-m\",\n    expand: \"false\",\n    expanded: navOpen,\n    onToggle: handleNavClick,\n    className: doScroll && !isHome ? \"sticky\" : doScroll && isHome ? \"sticky home\" : !doScroll && isHome ? \"home\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, __jsx(NavBarContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, __jsx(NavBarLogo, {\n    className: doScroll && !navOpen ? \"logo-m in-nav\" : !doScroll && navOpen ? \"logo-m in-nav\" : doScroll && navOpen ? \"logo-m in-nav\" : \"logo-m hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    onClick: navOpen ? handleNavClose : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, __jsx(Logo.Typographic, {\n    color: \"white\",\n    width: 160,\n    height: 86,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }))), __jsx(NavMenuToggle, {\n    className: doScroll ? \"nav-m-toggle\" : \"nav-m-toggle hidden\",\n    \"aria-controls\": \"navbar-m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, __jsx(Hamburger, {\n    isOpen: navOpen,\n    colorOpen: theme.stSecondary,\n    colorClosed: theme.stWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  })), !navOpen && __jsx(NavBarItems, {\n    className: doScroll ? \"nav-m-item hidden\" : \"nav-m-item\",\n    side: \"left\",\n    location: pathName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  })), __jsx(NavMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, __jsx(NavMenuContent, {\n    location: pathName,\n    closeNav: handleNavClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/src/components/navbar/NavBarMobile.js"],"names":["React","Button","Container","Navbar","ListGroup","Link","Hamburger","styled","Logo","bp","site","theme","NavWrapper","div","ContactButton","cardBorderWidth","navCardBorderColor","navLinkColor","stDark","NavBarContent","ExtLink","a","props","isLocation","stSecondary","stWhite","fontWeightBold","fontWeightNormal","fontSizeLg","NavBarLink","navLinkPaddingX","down","NavBarItems","side","location","className","navItems","navConfig","newNav","map","item","i","push","link","title","NavMenuWrapper","navbarBottomBorder","NavMenuGroup","hamburgerLinkBorder","hamburgerLinkHoverBackground","NavMenuItem","href","toString","NavMenuContent","closeNav","left","concat","right","pages","contact","MobileNav","position","background","top","itemsVisible","expanded","fontSizeSm","stPrimary","NavBarLogo","NavMenuToggle","Toggle","NavMenu","Collapse","MobileNavBar","navOpen","setNavOpen","pathName","doScroll","isHome","handleNavClose","handleNavClick","e"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,iBAArD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AAEA,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAI;;;;;;;CAA9B;AASA,MAAMC,aAAa,GAAGP,MAAM,CAACN,MAAD,CAAS;YACzBU,KAAK,CAACI,eAAgB,UAASJ,KAAK,CAACK,kBAAmB;;WAEzDL,KAAK,CAACM,YAAa;;aAEjBN,KAAK,CAACO,MAAO;;CAL1B;AASA,MAAMC,aAAa,GAAGZ,MAAM,CAACM,GAAI;;;;;;;;CAAjC;AAUA,MAAMO,OAAO,GAAGb,MAAM,CAACc,CAAE;WACdC,KAAK,IAAKA,KAAK,CAACC,UAAN,GAAmBZ,KAAK,CAACa,WAAzB,GAAuCb,KAAK,CAACc,OAAS;iBAC1DH,KAAK,IAClBA,KAAK,CAACC,UAAN,GAAmBZ,KAAK,CAACe,cAAzB,GAA0Cf,KAAK,CAACgB,gBAAiB;eACtDhB,KAAK,CAACiB,UAAW;;;;;;CAJhC;AAYA,MAAMC,UAAU,GAAGtB,MAAM,CAAC;AAAA,MAAC;AAAEgB,IAAAA;AAAF,GAAD;AAAA,MAAkBD,KAAlB;;AAAA,SAA8B,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;AAAA,CAAD,CAAoD;;;aAGhEX,KAAK,CAACmB,eAAgB;;WAExB,CAAC;AAAEP,EAAAA;AAAF,CAAD,KACPA,UAAU,GAAGZ,KAAK,CAACa,WAAT,GAAuBb,KAAK,CAACM,YAAa;iBACvC,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACbA,UAAU,GAAGZ,KAAK,CAACe,cAAT,GAA0Bf,KAAK,CAACgB,gBAAiB;;;;aAIlD,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KACPA,UAAU,GAAGZ,KAAK,CAACa,WAAT,GAAuBb,KAAK,CAACc,OAAQ;;;;;;;cAOvC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAqBA,UAAU,GAAG,KAAH,GAAW,CAAG;kBACzCZ,KAAK,CAACa,WAAY;;eAErB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAqBA,UAAU,GAAG,CAAH,GAAO,CAAG;;;IAGpDd,EAAE,CAACsB,IAAH,CAAQ,IAAR,CAAc;;;CA1BlB;;AA+BA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAArB,EAAoD;AAClD,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,SAAS,GAAG3B,IAAI,CAAC4B,MAAL,CAAYL,IAAZ,CAAhB;AACAI,EAAAA,SAAS,CAACE,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzBL,IAAAA,QAAQ,CAACM,IAAT,CACE,MAAC,UAAD;AACE,MAAA,GAAG,EAAED,CADP;AAEE,MAAA,SAAS,EAAEN,SAFb;AAGE,MAAA,UAAU,EAAED,QAAQ,KAAKM,IAAI,CAACG,IAAlB,GAAyB,IAAzB,GAAgC,KAH9C;AAIE,MAAA,IAAI,EAAEH,IAAI,CAACG,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGH,IAAI,CAACI,KANR,CADF;AAUA,WAAO,IAAP;AACD,GAZD;AAaA,SAAOR,QAAP;AACD;;AAED,MAAMS,cAAc,GAAGtC,MAAM,CAACL,SAAD,CAAY;;;sBAGnBS,KAAK,CAACO,MAAO;WACxBP,KAAK,CAACc,OAAQ;;;;;gBAKTd,KAAK,CAACmC,kBAAmB;CATzC;AAWA,MAAMC,YAAY,GAAGxC,MAAM,CAACH,SAAD,CAAY;;;;;;;;;4BASXO,KAAK,CAACqC,mBAAoB;;;4BAG1BrC,KAAK,CAACqC,mBAAoB;;;;;;;;;;;;wBAY9BrC,KAAK,CAACsC,4BAA6B;;;CAxB3D;AA4BA,MAAMC,WAAW,GAAG3C,MAAM,CAAC;AAAA,MAAC;AAAEgB,IAAAA,UAAF;AAAc4B,IAAAA,IAAd;AAAoBhB,IAAAA;AAApB,GAAD;AAAA,MAAmCb,KAAnC;;AAAA,SACzB,MAAC,IAAD;AACE,IAAA,SAAS,EAAEa,SADb;AAEE,IAAA,IAAI,EAAEgB,IAFR;AAGE,IAAA,MAAM,EAAE5B,UAAU,CAAC6B,QAAX;AAHV,KAIM9B,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADyB;AAAA,CAAD,CAOvB;WACQA,KAAK,IAAKA,KAAK,CAACC,UAAN,GAAmBZ,KAAK,CAACa,WAAzB,GAAuCb,KAAK,CAACc,OAAS;iBAC1DH,KAAK,IAClBA,KAAK,CAACC,UAAN,GAAmBZ,KAAK,CAACe,cAAzB,GAA0Cf,KAAK,CAACgB,gBAAiB;eACtDhB,KAAK,CAACiB,UAAW;;;;;;CAXhC;;AAmBA,SAASyB,cAAT,CAAwB;AAAEnB,EAAAA,QAAF;AAAYoB,EAAAA;AAAZ,CAAxB,EAAgD;AAC9C,MAAIjB,SAAS,GAAG3B,IAAI,CAAC4B,MAAL,CAAYiB,IAAZ,CAAiBC,MAAjB,CAAwB9C,IAAI,CAAC4B,MAAL,CAAYmB,KAApC,CAAhB;AACA,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,OAAO,EAAC,eAAvC;AAAuD,IAAA,KAAK,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/C,IAAI,CAACgD,KAAL,CAAWC,OAAX,CAAmBf,KADtB,CAFF,EAKE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,CAACE,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1B,WACE,MAAC,WAAD;AACE,MAAA,SAAS,EAAG,mBACVP,QAAQ,KAAKM,IAAI,CAACG,IAAlB,GAAyB,QAAzB,GAAoC,EACrC,EAHH;AAIE,MAAA,GAAG,EAAEF,CAJP;AAKE,MAAA,IAAI,EAAED,IAAI,CAACG,IALb;AAME,MAAA,UAAU,EAAET,QAAQ,KAAKM,IAAI,CAACG,IAAlB,GAAyB,IAAzB,GAAgC,KAN9C;AAOE,MAAA,OAAO,EAAEW,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGd,IAAI,CAACI,KATR,CADF;AAaD,GAdA,CADH,EAgBE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,2BAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,CALF,CADF;AAiCD;;AAED,MAAMgB,SAAS,GAAGrD,MAAM,CACtB;AAAA,MAAC;AAAEsD,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,GAAxB;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,GAAD;AAAA,MAAyD3C,KAAzD;;AAAA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAE2C;AAAxC,KAAsD3C,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAAA,CADsB,CAItB;;;;;;;;iBAQeX,KAAK,CAACuD,UAAW;wBACVvD,KAAK,CAACmC,kBAAmB;;;;4BAIrBnC,KAAK,CAACwD,SAAU;;;;4BAIhBxD,KAAK,CAACwD,SAAU;;;;4BAIhBxD,KAAK,CAACO,MAAO;;CAzBzC;AA6BA,MAAMkD,UAAU,GAAG7D,MAAM,CAACM,GAAI;;;;;;;;;;;;;;;;;CAA9B;AAmBA,MAAMwD,aAAa,GAAG9D,MAAM,CAACJ,MAAM,CAACmE,MAAR,CAAgB;;;;;;;;;;;;;;CAA5C;AAgBA,MAAMC,OAAO,GAAGhE,MAAM,CAACJ,MAAM,CAACqE,QAAR,CAAkB;;;CAAxC;AAKA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,UAFmC;AAGnCC,EAAAA,QAHmC;AAInCC,EAAAA;AAJmC,CAAtB,EAKZ;AACD,QAAMC,MAAM,GAAGF,QAAQ,KAAK,GAAb,GAAmB,IAAnB,GAA0B,KAAzC;;AACA,QAAMG,cAAc,GAAG,MAAMJ,UAAU,CAAC,KAAD,CAAvC;;AACA,QAAMK,cAAc,GAAGC,CAAC,IAAIN,UAAU,CAACM,CAAD,CAAtC,CAHC,CAKD;;;AACA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,QAAQ,EAAEP,OAHZ;AAIE,IAAA,QAAQ,EAAEM,cAJZ;AAKE,IAAA,SAAS,EACPH,QAAQ,IAAI,CAACC,MAAb,GACI,QADJ,GAEID,QAAQ,IAAIC,MAAZ,GACA,aADA,GAEA,CAACD,QAAD,IAAaC,MAAb,GACA,MADA,GAEA,IAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,SAAS,EACPD,QAAQ,IAAI,CAACH,OAAb,GACI,eADJ,GAEI,CAACG,QAAD,IAAaH,OAAb,GACA,eADA,GAEAG,QAAQ,IAAIH,OAAZ,GACA,eADA,GAEA,eARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,OAAO,EAAEA,OAAO,GAAGK,cAAH,GAAoB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,WAAN;AAAkB,IAAA,KAAK,EAAE,OAAzB;AAAkC,IAAA,KAAK,EAAE,GAAzC;AAA8C,IAAA,MAAM,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF,EAgBE,MAAC,aAAD;AACE,IAAA,SAAS,EAAEF,QAAQ,GAAG,cAAH,GAAoB,qBADzC;AAEE,qBAAc,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,SAAD;AACE,IAAA,MAAM,EAAEH,OADV;AAEE,IAAA,SAAS,EAAE/D,KAAK,CAACa,WAFnB;AAGE,IAAA,WAAW,EAAEb,KAAK,CAACc,OAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAhBF,EA0BG,CAACiD,OAAD,IACC,MAAC,WAAD;AACE,IAAA,SAAS,EAAEG,QAAQ,GAAG,mBAAH,GAAyB,YAD9C;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CAfF,EAiDE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEA,QAA1B;AAAoC,IAAA,QAAQ,EAAEG,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjDF,CADF,CADF;AAyDD","sourcesContent":["import React from \"react\";\nimport { Button, Container, Navbar, ListGroup } from \"react-bootstrap\";\n// import { Link } from \"wouter\";\nimport Link from \"next/link\";\nimport Hamburger from \"components/navbar/Hamburger\";\nimport styled from \"styled-components\";\nimport Logo from \"components/svg/Logos\";\nimport bp from \"utils/breakpoints\";\nimport site from \"config\";\nimport theme from \"styles/exports.module.scss\";\n\nconst NavWrapper = styled.div`\n  position: fixed !important;\n  height: 86px;\n  top: 0;\n  width: 100%;\n  z-index: 1000 !important;\n  background-color: transparent !important;\n`;\n\nconst ContactButton = styled(Button)`\n  border: ${theme.cardBorderWidth} solid ${theme.navCardBorderColor} !important;\n  white-space: nowrap;\n  color: ${theme.navLinkColor} !important;\n  :hover {\n    color: ${theme.stDark} !important;\n  }\n`;\n\nconst NavBarContent = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1;\n  padding-left: 15px;\n  padding-right: 15px;\n  align-content: center;\n  justify-content: space-between;\n`;\n\nconst ExtLink = styled.a`\n  color: ${props => (props.isLocation ? theme.stSecondary : theme.stWhite)};\n  font-weight: ${props =>\n    props.isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  font-size: ${theme.fontSizeLg};\n  text-decoration: none;\n  :hover {\n    color: inherit;\n    text-decoration: none !important;\n  }\n`;\n\nconst NavBarLink = styled(({ isLocation, ...props }) => <Link {...props} />)`\n  position: relative;\n  display: inline-block;\n  padding: ${theme.navLinkPaddingX};\n  text-decoration: none;\n  color: ${({ isLocation }) =>\n    isLocation ? theme.stSecondary : theme.navLinkColor};\n  font-weight: ${({ isLocation }) =>\n    isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  transition: color 0.5s, font-weight 0.5s;\n\n  &:hover {\n    color: ${({ isLocation }) =>\n      isLocation ? theme.stSecondary : theme.stWhite} !important;\n  }\n\n  ::before {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    height: ${({ isLocation }) => (isLocation ? \"2px\" : 0)};\n    background: ${theme.stSecondary};\n    content: \"\";\n    opacity: ${({ isLocation }) => (isLocation ? 1 : 0)};\n    transition: width 0.5s, opacity 0.5s, transform 0.5s;\n  }\n  ${bp.down(\"md\")} {\n    padding: 0.5rem;\n  }\n`;\n\nfunction NavBarItems({ side, location, className }) {\n  let navItems = [];\n  let navConfig = site.newNav[side];\n  navConfig.map((item, i) => {\n    navItems.push(\n      <NavBarLink\n        key={i}\n        className={className}\n        isLocation={location === item.link ? true : false}\n        href={item.link}\n      >\n        {item.title}\n      </NavBarLink>\n    );\n    return null;\n  });\n  return navItems;\n}\n\nconst NavMenuWrapper = styled(Container)`\n  width: 100%;\n  position: relative;\n  background-color: ${theme.stDark};\n  color: ${theme.stWhite};\n  padding-top: 1.5rem !important;\n  min-height: 100vh;\n  overflow-y: hidden;\n  z-index: 2;\n  border-top: ${theme.navbarBottomBorder};\n`;\nconst NavMenuGroup = styled(ListGroup)`\n  margin-top: 1.5rem;\n  width: 100%;\n\n  .list-group-item:first-child {\n    border-top: none;\n  }\n  .list-group-item:last-child {\n    border-bottom: none;\n    border-top: 1px solid ${theme.hamburgerLinkBorder} !important;\n  }\n  .list-group-item:not(:first-child):not(:last-child) {\n    border-top: 1px solid ${theme.hamburgerLinkBorder} !important;\n  }\n  .list-group-item {\n    padding: 2rem 1.25rem;\n    border: none;\n    background-color: transparent;\n    border-radius: 0 !important;\n    transition: background-color 0.2s ease;\n  }\n  .list-group-item:hover,\n  .list-group-item:active,\n  .list-group-item.active {\n    background-color: ${theme.hamburgerLinkHoverBackground} !important;\n    border-color: unset;\n  }\n`;\nconst NavMenuItem = styled(({ isLocation, href, className, ...props }) => (\n  <Link\n    className={className}\n    href={href}\n    active={isLocation.toString()}\n    {...props}\n  />\n))`\n  color: ${props => (props.isLocation ? theme.stSecondary : theme.stWhite)};\n  font-weight: ${props =>\n    props.isLocation ? theme.fontWeightBold : theme.fontWeightNormal};\n  font-size: ${theme.fontSizeLg};\n  text-decoration: none;\n  :hover {\n    color: inherit;\n    text-decoration: none !important;\n  }\n`;\n\nfunction NavMenuContent({ location, closeNav }) {\n  let navConfig = site.newNav.left.concat(site.newNav.right);\n  return (\n    <NavMenuWrapper>\n      {/* <MobileHamburgerBorder /> */}\n      <ContactButton href=\"/contact\" variant=\"outline-light\" block>\n        {site.pages.contact.title}\n      </ContactButton>\n      <NavMenuGroup>\n        {navConfig.map((item, i) => {\n          return (\n            <NavMenuItem\n              className={`list-group-item ${\n                location === item.link ? \"active\" : \"\"\n              }`}\n              key={i}\n              href={item.link}\n              isLocation={location === item.link ? true : false}\n              onClick={closeNav}\n            >\n              {item.title}\n            </NavMenuItem>\n          );\n        })}\n        <ExtLink\n          className=\"list-group-item\"\n          href=\"https://docs.stellar.tech\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Docs\n        </ExtLink>\n      </NavMenuGroup>\n    </NavMenuWrapper>\n  );\n}\n\nconst MobileNav = styled(\n  ({ position, background, top, itemsVisible, expanded, ...props }) => (\n    <Navbar variant=\"transparent\" expanded={expanded} {...props} />\n  )\n)`\n    display: flex !important;\n    flex: 1 0 100% !important;\n    flex-wrap: wrap !important;\n    justify-content: space-between !important;\n    align-items: center !important;\n    padding: 0 !important;\n    height: 86px;\n    font-size: ${theme.fontSizeSm};\n    // border-bottom: ${theme.navbarBottomBorder};\n    background-color: transparent;\n\n    &.home {\n        background-color: ${theme.stPrimary};\n    }\n\n    &.sticky.home {\n        background-color: ${theme.stPrimary};\n    }\n\n    &.sticky {\n        background-color: ${theme.stDark};\n    }\n`;\n\nconst NavBarLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n  height: 86px;\n  transition: all 0.2s ease;\n  transform: translate3d(2%, 8%, 0);\n  transform-origin: bottom;\n\n  &.logo-m.in-nav {\n    opacity: 1;\n    pointer-events: auto;\n    visibility: visible;\n  }\n`;\n\nconst NavMenuToggle = styled(Navbar.Toggle)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  pointer-events: auto;\n  opacity: 1;\n  visibility: visible;\n  transition: all 0.2s ease;\n  transform-origin: right;\n  padding-top: 1rem !important;\n  padding-right: 0.75rem !important;\n  padding-bottom: 0.5rem !important;\n  padding-left: 0.25rem !important;\n`;\n\nconst NavMenu = styled(Navbar.Collapse)`\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n`;\n\nexport default function MobileNavBar({\n  navOpen,\n  setNavOpen,\n  pathName,\n  doScroll\n}) {\n  const isHome = pathName === \"/\" ? true : false;\n  const handleNavClose = () => setNavOpen(false);\n  const handleNavClick = e => setNavOpen(e);\n\n  // Render\n  return (\n    <NavWrapper>\n      <MobileNav\n        id=\"navbar-m\"\n        expand=\"false\"\n        expanded={navOpen}\n        onToggle={handleNavClick}\n        className={\n          doScroll && !isHome\n            ? \"sticky\"\n            : doScroll && isHome\n            ? \"sticky home\"\n            : !doScroll && isHome\n            ? \"home\"\n            : null\n        }\n      >\n        <NavBarContent>\n          <NavBarLogo\n            className={\n              doScroll && !navOpen\n                ? \"logo-m in-nav\"\n                : !doScroll && navOpen\n                ? \"logo-m in-nav\"\n                : doScroll && navOpen\n                ? \"logo-m in-nav\"\n                : \"logo-m hidden\"\n            }\n          >\n            <Link href=\"/\" onClick={navOpen ? handleNavClose : null}>\n              <Logo.Typographic color={\"white\"} width={160} height={86} />\n            </Link>\n          </NavBarLogo>\n          <NavMenuToggle\n            className={doScroll ? \"nav-m-toggle\" : \"nav-m-toggle hidden\"}\n            aria-controls=\"navbar-m\"\n          >\n            <Hamburger\n              isOpen={navOpen}\n              colorOpen={theme.stSecondary}\n              colorClosed={theme.stWhite}\n            />\n          </NavMenuToggle>\n          {!navOpen && (\n            <NavBarItems\n              className={doScroll ? \"nav-m-item hidden\" : \"nav-m-item\"}\n              side=\"left\"\n              location={pathName}\n            />\n          )}\n        </NavBarContent>\n        <NavMenu>\n          <NavMenuContent location={pathName} closeNav={handleNavClose} />\n        </NavMenu>\n      </MobileNav>\n    </NavWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}