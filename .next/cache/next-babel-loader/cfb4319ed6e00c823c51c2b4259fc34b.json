{"ast":null,"code":"import { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { isEqual } from 'lodash';\n/**\n * Set state based on the currently active section on a page\n * @param {*} currentState State Object\n * @param {function} callback Set State Function\n * @param {*} defaultState State to Set by Default\n * @param {[]} deps Array of Dependencies\n * @param {[]} sections Array of Section Refs\n */\n\nexport const useActiveSection = (currentState, callback, defaultState, [...deps], [...sections]) => {\n  const last = sections.length - 1;\n\n  const effect = ({\n    currPos\n  }) => {\n    const {\n      y\n    } = currPos;\n    let toSet = defaultState;\n    let sameAsCurrent = false;\n\n    for (const [i, section] of sections.entries()) {\n      const [ref, stateObj] = section;\n\n      if (i === last) {\n        if (y < -ref.current.offsetTop) {\n          sameAsCurrent = isEqual(currentState, stateObj);\n          toSet = stateObj;\n        }\n      } else {\n        const [nextRef] = sections[i + 1];\n\n        if (y >= -nextRef.current.offsetTop && y <= -ref.current.offsetTop) {\n          sameAsCurrent = isEqual(currentState, stateObj);\n          toSet = stateObj;\n        }\n      }\n    }\n\n    if (!sameAsCurrent) {\n      callback(toSet);\n    }\n  };\n\n  return useScrollPosition(effect, deps);\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/useActiveSection.js"],"names":["useScrollPosition","isEqual","useActiveSection","currentState","callback","defaultState","deps","sections","last","length","effect","currPos","y","toSet","sameAsCurrent","i","section","entries","ref","stateObj","current","offsetTop","nextRef"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA;;;;;;;;;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,YAD8B,EAE9BC,QAF8B,EAG9BC,YAH8B,EAI9B,CAAC,GAAGC,IAAJ,CAJ8B,EAK9B,CAAC,GAAGC,QAAJ,CAL8B,KAM3B;AACH,QAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAA/B;;AACA,QAAMC,MAAM,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAQD,OAAd;AACA,QAAIE,KAAK,GAAGR,YAAZ;AACA,QAAIS,aAAa,GAAG,KAApB;;AACA,SAAK,MAAM,CAACC,CAAD,EAAIC,OAAJ,CAAX,IAA2BT,QAAQ,CAACU,OAAT,EAA3B,EAA+C;AAC7C,YAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBH,OAAxB;;AACA,UAAID,CAAC,KAAKP,IAAV,EAAgB;AACd,YAAII,CAAC,GAAG,CAACM,GAAG,CAACE,OAAJ,CAAYC,SAArB,EAAgC;AAC9BP,UAAAA,aAAa,GAAGb,OAAO,CAACE,YAAD,EAAegB,QAAf,CAAvB;AACAN,UAAAA,KAAK,GAAGM,QAAR;AACD;AACF,OALD,MAKO;AACL,cAAM,CAACG,OAAD,IAAYf,QAAQ,CAACQ,CAAC,GAAG,CAAL,CAA1B;;AACA,YAAIH,CAAC,IAAI,CAACU,OAAO,CAACF,OAAR,CAAgBC,SAAtB,IAAmCT,CAAC,IAAI,CAACM,GAAG,CAACE,OAAJ,CAAYC,SAAzD,EAAoE;AAClEP,UAAAA,aAAa,GAAGb,OAAO,CAACE,YAAD,EAAegB,QAAf,CAAvB;AACAN,UAAAA,KAAK,GAAGM,QAAR;AACD;AACF;AACF;;AACD,QAAI,CAACL,aAAL,EAAoB;AAClBV,MAAAA,QAAQ,CAACS,KAAD,CAAR;AACD;AACF,GAtBD;;AAwBA,SAAOb,iBAAiB,CAACU,MAAD,EAASJ,IAAT,CAAxB;AACD,CAjCM","sourcesContent":["import { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { isEqual } from 'lodash';\n\n/**\n * Set state based on the currently active section on a page\n * @param {*} currentState State Object\n * @param {function} callback Set State Function\n * @param {*} defaultState State to Set by Default\n * @param {[]} deps Array of Dependencies\n * @param {[]} sections Array of Section Refs\n */\nexport const useActiveSection = (\n  currentState,\n  callback,\n  defaultState,\n  [...deps],\n  [...sections],\n) => {\n  const last = sections.length - 1;\n  const effect = ({ currPos }) => {\n    const { y } = currPos;\n    let toSet = defaultState;\n    let sameAsCurrent = false;\n    for (const [i, section] of sections.entries()) {\n      const [ref, stateObj] = section;\n      if (i === last) {\n        if (y < -ref.current.offsetTop) {\n          sameAsCurrent = isEqual(currentState, stateObj);\n          toSet = stateObj;\n        }\n      } else {\n        const [nextRef] = sections[i + 1];\n        if (y >= -nextRef.current.offsetTop && y <= -ref.current.offsetTop) {\n          sameAsCurrent = isEqual(currentState, stateObj);\n          toSet = stateObj;\n        }\n      }\n    }\n    if (!sameAsCurrent) {\n      callback(toSet);\n    }\n  };\n\n  return useScrollPosition(effect, deps);\n};\n"]},"metadata":{},"sourceType":"module"}