{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/context/ColorMode.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport dynamic from 'next/dynamic';\nconst ChakraColorModeProvider = dynamic(_c = () => import('@chakra-ui/core').then(i => i.ColorModeProvider), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('@chakra-ui/core')],\n    modules: ['@chakra-ui/core']\n  }\n});\n_c2 = ChakraColorModeProvider;\nexport { useColorMode } from '@chakra-ui/core';\nexport const ColorModeProvider = ({\n  children\n}) => __jsx(ChakraColorModeProvider, {\n  value: \"light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, children);\n_c3 = ColorModeProvider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChakraColorModeProvider$dynamic\");\n$RefreshReg$(_c2, \"ChakraColorModeProvider\");\n$RefreshReg$(_c3, \"ColorModeProvider\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/context/ColorMode.js"],"names":["React","dynamic","ChakraColorModeProvider","then","i","ColorModeProvider","useColorMode","children"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,MAAMC,uBAAuB,GAAGD,OAAO,MAAC,MACtC,OAAO,iBAAP,EAA0BE,IAA1B,CAA+BC,CAAC,IAAIA,CAAC,CAACC,iBAAtC,CADqC;AAAA;AAAA,wCAC9B,iBAD8B;AAAA,cAC9B,iBAD8B;AAAA;AAAA,EAAvC;MAAMH,uB;AAIN,SAASI,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMD,iBAAiB,GAAG,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAC/B,MAAC,uBAAD;AAAyB,EAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwCA,QAAxC,CADK;MAAMF,iB","sourcesContent":["import * as React from 'react';\nimport dynamic from 'next/dynamic';\n\nconst ChakraColorModeProvider = dynamic(() =>\n  import('@chakra-ui/core').then(i => i.ColorModeProvider),\n);\n\nexport { useColorMode } from '@chakra-ui/core';\n\nexport const ColorModeProvider = ({ children }) => (\n  <ChakraColorModeProvider value=\"light\">{children}</ChakraColorModeProvider>\n);\n"]},"metadata":{},"sourceType":"module"}