{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/pages/cloud.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport useSWR from 'swr';\nimport { Box, Flex, Grid, Heading, Text } from '@chakra-ui/core';\nimport { useColorMode, useTheme } from '../context';\nimport { USMap } from '../components/USMap';\nimport { VMware } from '../components/Icons';\nimport { Link } from '../components/Link';\nimport { Br, Button } from '../components';\nimport { useActiveSection, usePageContent } from '../hooks';\nimport { _headerStyle } from '../state/atoms';\nconst heroBtn1Variant = {\n  dark: 'light',\n  light: 'primary'\n};\nconst headerBg = {\n  dark: 'transparent',\n  light: 'original.light'\n};\nconst sect1Bg = {\n  dark: 'original.dark',\n  light: 'original.light'\n};\nconst sect1Text = {\n  dark: 'original.light',\n  light: 'original.dark'\n};\nconst sect1BtnText = {\n  dark: 'original.light',\n  light: 'original.dark'\n};\nconst sect2Bg = {\n  dark: 'original.dark',\n  light: 'original.tertiary'\n};\nconst sect2Text = {\n  dark: 'original.light',\n  light: 'original.dark'\n};\nconst sect3Bg = {\n  dark: 'original.dark',\n  light: 'original.primary'\n};\nconst sect3Text = {\n  dark: 'original.light',\n  light: 'original.light'\n};\nconst sect4Bg = {\n  dark: 'original.dark',\n  light: 'original.secondary'\n};\nconst sect4Text = {\n  dark: 'original.light',\n  light: 'original.light'\n};\nconst sect5Bg = {\n  dark: 'original.dark',\n  light: 'original.dark'\n};\nconst sect5Text = {\n  dark: 'original.light',\n  light: 'original.light'\n};\nconst sectBorder = {\n  dark: {\n    borderBottomColor: 'original.tertiary',\n    borderBottomWidth: '1px'\n  },\n  light: {}\n};\nconst gradientLight = {\n  backgroundColor: 'original.light'\n};\nconst gradientDark = {\n  background: 'rgb(22, 19, 24)',\n  background: 'linear-gradient(180deg, rgba(43, 60, 143, 1) 0%, rgba(42, 23, 74, 1) 50%, rgba(22, 19, 24, 1) 100%)'\n};\nconst gradient = {\n  dark: gradientDark,\n  light: gradientLight\n};\nconst commonDark = {\n  btnBorder: undefined,\n  btnVariant: 'solid',\n  btnHoverBg: 'whiteAlpha.500',\n  border: {\n    borderBottomColor: 'original.tertiary',\n    borderBottomWidth: '1px'\n  }\n};\nconst commonLight = {\n  btnVariant: 'outline',\n  btnBorder: 'black',\n  btnHoverBg: 'blackAlpha.50',\n  border: {}\n};\nconst variants = [{\n  dark: _objectSpread(_objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark), {}, {\n    otherProps: {\n      pt: '320px'\n    }\n  }),\n  light: _objectSpread(_objectSpread({\n    bg: 'original.light',\n    text: 'original.dark',\n    btnText: 'original.dark'\n  }, commonLight), {}, {\n    otherProps: {\n      pt: '320px'\n    }\n  })\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.tertiary',\n    text: 'original.dark',\n    btnText: 'original.dark'\n  }, commonLight)\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.primary',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonLight)\n}, {\n  dark: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonDark),\n  light: _objectSpread({\n    bg: 'original.dark',\n    text: 'original.light',\n    btnText: 'original.light'\n  }, commonLight)\n}];\n\nconst useSectionStyle = idx => {\n  const {\n    colorMode\n  } = useColorMode();\n  return variants[idx][colorMode];\n};\n\nconst fetcher = async url => {\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Section = forwardRef((_ref, ref) => {\n  let {\n    content,\n    index\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"content\", \"index\"]);\n\n  const {\n    title,\n    subtitle,\n    body,\n    showButton,\n    buttonText,\n    buttonLink\n  } = content;\n  const style = useSectionStyle(index);\n  return __jsx(Box, _extends({\n    ref: ref,\n    as: \"section\",\n    pt: \"320px\",\n    pb: 24,\n    overflow: \"hidden\",\n    bg: style.bg,\n    color: style.text\n  }, style.border, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }), __jsx(Flex, {\n    h: \"100%\",\n    overflow: \"hidden\",\n    px: 24,\n    py: 16,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, title, subtitle, body, showButton && __jsx(Button, {\n    href: buttonLink,\n    leftIcon: \"chevron-right\",\n    color: sect1BtnText[colorMode],\n    variant: style.btnVariant,\n    borderColor: style.btnBorder,\n    _hover: {\n      backgroundColor: style.btnHoverBg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, buttonText)));\n});\n\nconst Cloud = ({\n  contentUrl,\n  content,\n  geoData\n}) => {\n  var _locationsRaw$items;\n\n  console.log(content);\n  const {\n    data: locationsRaw,\n    error\n  } = useSWR(contentUrl + '&content_type=orionLocation', fetcher);\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    colors\n  } = useTheme();\n  const mapColor = {\n    dark: colors.whiteAlpha[200],\n    light: colors.blackAlpha[200]\n  };\n  const markerColor = {\n    dark: colors.green[400],\n    light: colors.primary[400]\n  };\n  const [headerStyle, setHeaderStyle] = useRecoilState(_headerStyle);\n  const heroRef = useRef();\n  const sect1Ref = useRef();\n  const sect2Ref = useRef();\n  const sect3Ref = useRef();\n  const sect4Ref = useRef();\n  const sect5Ref = useRef();\n  error && console.error(error);\n  const locations = locationsRaw === null || locationsRaw === void 0 ? void 0 : (_locationsRaw$items = locationsRaw.items) === null || _locationsRaw$items === void 0 ? void 0 : _locationsRaw$items.map(loc => loc.fields);\n  const sectionRefs = content.map(() => {\n    return useRef();\n  });\n  useEffect(() => {\n    setHeaderStyle({\n      bg: headerBg[colorMode],\n      color: sect1BtnText[colorMode]\n    });\n  }, [colorMode]);\n  useActiveSection(headerStyle, setHeaderStyle, {\n    bg: headerBg[colorMode],\n    color: sect1BtnText[colorMode]\n  }, [headerStyle, colorMode], sectionRefs.map((ref, i) => {\n    const style = useSectionStyle(i);\n    [ref, {\n      bg: style.bg,\n      color: style.text\n    }];\n  }));\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    ref: heroRef,\n    w: \"100%\",\n    minH: \"80vh\",\n    background: gradient[colorMode],\n    px: 24,\n    pt: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    flexDir: \"column\",\n    alignItems: \"center\",\n    mt: [4, 4, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    textAlign: \"center\",\n    flexDir: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h1\",\n    fontSize: \"6xl\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Orion\"), __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"3xl\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"The Enterprise Native Cloud\"), __jsx(Heading, {\n    as: \"h3\",\n    mt: 8,\n    fontSize: \"lg\",\n    fontWeight: \"normal\",\n    maxW: [null, null, '75%'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Our strategically located data centers allow enterprises to substantially reduce latency between end-users and business applications.\"), __jsx(Flex, {\n    justifyContent: \"center\",\n    w: \"100%\",\n    flexWrap: \"wrap\",\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    mx: 4,\n    href: \"#\",\n    boxShadow: \"md\",\n    variantColor: heroBtn1Variant[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Find Your Edge Data Center\"), __jsx(Button, {\n    mx: 4,\n    href: \"#\",\n    color: sect1BtnText[colorMode],\n    boxShadow: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Learn More\")))), __jsx(USMap, {\n    maxW: \"75%\",\n    geoData: geoData,\n    locations: locations,\n    mapColor: mapColor[colorMode],\n    markerColor: markerColor[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  })), sectionRefs.map((ref, i) => {\n    return __jsx(Section, {\n      ref: ref,\n      content: content[i],\n      index: i,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default Cloud;\nexport const getStaticProps = async ctx => {\n  let contentUrl = '';\n  let geoData = {};\n  let content = {};\n  contentUrl = [process.env.CONTENTFUL_BASEURL, '/', process.env.CONTENTFUL_SPACE, '/entries', '?access_token=', process.env.CONTENTFUL_KEY].join('');\n\n  try {\n    const geoRes = await fetch('https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json');\n    const contentRes = await fetch(`${contentUrl}&content_type=pageContent&fields.page[in]=cloud`);\n    geoData = await geoRes.json();\n    contentData = await contentRes.json();\n    content = contentData.items;\n  } catch (err) {\n    console.error(err);\n  }\n\n  return {\n    props: {\n      geoData,\n      contentUrl,\n      content\n    }\n  };\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/pages/cloud.js"],"names":["React","useRecoilState","useEffect","useRef","forwardRef","useSWR","Box","Flex","Grid","Heading","Text","useColorMode","useTheme","USMap","VMware","Link","Br","Button","useActiveSection","usePageContent","_headerStyle","heroBtn1Variant","dark","light","headerBg","sect1Bg","sect1Text","sect1BtnText","sect2Bg","sect2Text","sect3Bg","sect3Text","sect4Bg","sect4Text","sect5Bg","sect5Text","sectBorder","borderBottomColor","borderBottomWidth","gradientLight","backgroundColor","gradientDark","background","gradient","commonDark","btnBorder","undefined","btnVariant","btnHoverBg","border","commonLight","variants","bg","text","btnText","otherProps","pt","useSectionStyle","idx","colorMode","fetcher","url","response","fetch","json","err","console","error","Section","ref","content","index","props","title","subtitle","body","showButton","buttonText","buttonLink","style","Cloud","contentUrl","geoData","log","data","locationsRaw","colors","mapColor","whiteAlpha","blackAlpha","markerColor","green","primary","headerStyle","setHeaderStyle","heroRef","sect1Ref","sect2Ref","sect3Ref","sect4Ref","sect5Ref","locations","items","map","loc","fields","sectionRefs","color","i","getStaticProps","ctx","process","env","CONTENTFUL_BASEURL","CONTENTFUL_SPACE","CONTENTFUL_KEY","join","geoRes","contentRes","contentData"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport useSWR from 'swr';\nimport { Box, Flex, Grid, Heading, Text } from '@chakra-ui/core';\nimport { useColorMode, useTheme } from '../context';\nimport { USMap } from '../components/USMap';\nimport { VMware } from '../components/Icons';\nimport { Link } from '../components/Link';\nimport { Br, Button } from '../components';\nimport { useActiveSection, usePageContent } from '../hooks';\nimport { _headerStyle } from '../state/atoms';\n\nconst heroBtn1Variant = { dark: 'light', light: 'primary' };\n\nconst headerBg = { dark: 'transparent', light: 'original.light' };\nconst sect1Bg = { dark: 'original.dark', light: 'original.light' };\nconst sect1Text = { dark: 'original.light', light: 'original.dark' };\nconst sect1BtnText = { dark: 'original.light', light: 'original.dark' };\n\nconst sect2Bg = { dark: 'original.dark', light: 'original.tertiary' };\nconst sect2Text = { dark: 'original.light', light: 'original.dark' };\n\nconst sect3Bg = { dark: 'original.dark', light: 'original.primary' };\nconst sect3Text = { dark: 'original.light', light: 'original.light' };\n\nconst sect4Bg = { dark: 'original.dark', light: 'original.secondary' };\nconst sect4Text = { dark: 'original.light', light: 'original.light' };\n\nconst sect5Bg = { dark: 'original.dark', light: 'original.dark' };\nconst sect5Text = { dark: 'original.light', light: 'original.light' };\n\nconst sectBorder = {\n  dark: { borderBottomColor: 'original.tertiary', borderBottomWidth: '1px' },\n  light: {},\n};\n\nconst gradientLight = { backgroundColor: 'original.light' };\n\nconst gradientDark = {\n  background: 'rgb(22, 19, 24)',\n  background:\n    'linear-gradient(180deg, rgba(43, 60, 143, 1) 0%, rgba(42, 23, 74, 1) 50%, rgba(22, 19, 24, 1) 100%)',\n};\n\nconst gradient = { dark: gradientDark, light: gradientLight };\n\nconst commonDark = {\n  btnBorder: undefined,\n  btnVariant: 'solid',\n  btnHoverBg: 'whiteAlpha.500',\n  border: { borderBottomColor: 'original.tertiary', borderBottomWidth: '1px' },\n};\n\nconst commonLight = {\n  btnVariant: 'outline',\n  btnBorder: 'black',\n  btnHoverBg: 'blackAlpha.50',\n  border: {},\n};\n\nconst variants = [\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n      otherProps: { pt: '320px' },\n    },\n    light: {\n      bg: 'original.light',\n      text: 'original.dark',\n      btnText: 'original.dark',\n      ...commonLight,\n      otherProps: { pt: '320px' },\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.tertiary',\n      text: 'original.dark',\n      btnText: 'original.dark',\n      ...commonLight,\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.primary',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonLight,\n    },\n  },\n  {\n    dark: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonDark,\n    },\n    light: {\n      bg: 'original.dark',\n      text: 'original.light',\n      btnText: 'original.light',\n      ...commonLight,\n    },\n  },\n];\nconst useSectionStyle = idx => {\n  const { colorMode } = useColorMode();\n  return variants[idx][colorMode];\n};\n\nconst fetcher = async url => {\n  try {\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Section = forwardRef(({ content, index, ...props }, ref) => {\n  const { title, subtitle, body, showButton, buttonText, buttonLink } = content;\n  const style = useSectionStyle(index);\n  return (\n    <Box\n      ref={ref}\n      as=\"section\"\n      pt=\"320px\"\n      pb={24}\n      overflow=\"hidden\"\n      bg={style.bg}\n      color={style.text}\n      {...style.border}\n      {...props}>\n      <Flex h=\"100%\" overflow=\"hidden\" px={24} py={16} alignItems=\"center\" flexDir=\"column\">\n        {title}\n        {subtitle}\n        {body}\n        {showButton && (\n          <Button\n            href={buttonLink}\n            leftIcon=\"chevron-right\"\n            color={sect1BtnText[colorMode]}\n            variant={style.btnVariant}\n            borderColor={style.btnBorder}\n            _hover={{\n              backgroundColor: style.btnHoverBg,\n            }}>\n            {buttonText}\n          </Button>\n        )}\n      </Flex>\n    </Box>\n  );\n});\n\nconst Cloud = ({ contentUrl, content, geoData }) => {\n  console.log(content);\n  const { data: locationsRaw, error } = useSWR(contentUrl + '&content_type=orionLocation', fetcher);\n  const { colorMode } = useColorMode();\n  const { colors } = useTheme();\n  const mapColor = { dark: colors.whiteAlpha[200], light: colors.blackAlpha[200] };\n  const markerColor = { dark: colors.green[400], light: colors.primary[400] };\n  const [headerStyle, setHeaderStyle] = useRecoilState(_headerStyle);\n  const heroRef = useRef();\n  const sect1Ref = useRef();\n  const sect2Ref = useRef();\n  const sect3Ref = useRef();\n  const sect4Ref = useRef();\n  const sect5Ref = useRef();\n  error && console.error(error);\n  const locations = locationsRaw?.items?.map(loc => loc.fields);\n\n  const sectionRefs = content.map(() => {\n    return useRef();\n  });\n\n  useEffect(() => {\n    setHeaderStyle({ bg: headerBg[colorMode], color: sect1BtnText[colorMode] });\n  }, [colorMode]);\n\n  useActiveSection(\n    headerStyle,\n    setHeaderStyle,\n    { bg: headerBg[colorMode], color: sect1BtnText[colorMode] },\n    [headerStyle, colorMode],\n    sectionRefs.map((ref, i) => {\n      const style = useSectionStyle(i);\n      [ref, { bg: style.bg, color: style.text }];\n    }),\n  );\n  return (\n    <>\n      <Box ref={heroRef} w=\"100%\" minH=\"80vh\" background={gradient[colorMode]} px={24} pt={32}>\n        <Flex flexDir=\"column\" alignItems=\"center\" mt={[4, 4, 8]}>\n          <Flex textAlign=\"center\" flexDir=\"column\" alignItems=\"center\">\n            <Heading as=\"h1\" fontSize=\"6xl\" fontWeight=\"light\">\n              Orion\n            </Heading>\n            <Heading as=\"h2\" fontSize=\"3xl\" fontWeight=\"light\">\n              The Enterprise Native Cloud\n            </Heading>\n            <Heading as=\"h3\" mt={8} fontSize=\"lg\" fontWeight=\"normal\" maxW={[null, null, '75%']}>\n              Our strategically located data centers allow enterprises to substantially reduce\n              latency between end-users and business applications.\n            </Heading>\n            <Flex justifyContent=\"center\" w=\"100%\" flexWrap=\"wrap\" mt={8}>\n              <Button mx={4} href=\"#\" boxShadow=\"md\" variantColor={heroBtn1Variant[colorMode]}>\n                Find Your Edge Data Center\n              </Button>\n              <Button mx={4} href=\"#\" color={sect1BtnText[colorMode]} boxShadow=\"md\">\n                Learn More\n              </Button>\n            </Flex>\n          </Flex>\n        </Flex>\n        <USMap\n          maxW=\"75%\"\n          geoData={geoData}\n          locations={locations}\n          mapColor={mapColor[colorMode]}\n          markerColor={markerColor[colorMode]}\n        />\n      </Box>\n      {sectionRefs.map((ref, i) => {\n        return <Section ref={ref} content={content[i]} index={i} key={i} />;\n      })}\n    </>\n  );\n};\n\nexport default Cloud;\n\nexport const getStaticProps = async ctx => {\n  let contentUrl = '';\n  let geoData = {};\n  let content = {};\n  contentUrl = [\n    process.env.CONTENTFUL_BASEURL,\n    '/',\n    process.env.CONTENTFUL_SPACE,\n    '/entries',\n    '?access_token=',\n    process.env.CONTENTFUL_KEY,\n  ].join('');\n\n  try {\n    const geoRes = await fetch('https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json');\n    const contentRes = await fetch(`${contentUrl}&content_type=pageContent&fields.page[in]=cloud`);\n    geoData = await geoRes.json();\n    contentData = await contentRes.json();\n    content = contentData.items;\n  } catch (err) {\n    console.error(err);\n  }\n  return { props: { geoData, contentUrl, content } };\n};\n"]},"metadata":{},"sourceType":"module"}