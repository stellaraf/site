{"ast":null,"code":"import { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { isEqual } from 'lodash';\nexport const useActiveSection = (currentState, callback, defaultState, [...deps], [...sections]) => {\n  const last = sections.length - 1;\n  console.log(last);\n\n  const effect = ({\n    currPos\n  }) => {\n    const {\n      y\n    } = currPos;\n\n    for (const [i, section] of sections.entries()) {\n      const [ref, stateObj] = section;\n\n      if (i === last) {\n        if (y < -ref.current.offsetTop) {\n          const sameAsCurrent = isEqual(currentState, stateObj);\n\n          if (!sameAsCurrent) {\n            callback(stateObj); // break;\n          }\n        }\n      } else {\n        const [nextRef] = sections[i + 1];\n        console.log(i);\n\n        if (y >= nextRef.current.offsetTop && y <= -ref.current.offsetTop) {\n          const sameAsCurrent = isEqual(currentState, stateObj);\n\n          if (!sameAsCurrent) {\n            callback(stateObj); // break;\n          }\n        } else {\n          const sameAsCurrent = isEqual(currentState, defaultState);\n\n          if (!sameAsCurrent) {\n            callback(defaultState); // break;\n          }\n        }\n      }\n    }\n  };\n\n  return useScrollPosition(effect, deps);\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/useActiveSection.js"],"names":["useScrollPosition","isEqual","useActiveSection","currentState","callback","defaultState","deps","sections","last","length","console","log","effect","currPos","y","i","section","entries","ref","stateObj","current","offsetTop","sameAsCurrent","nextRef"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,YAD8B,EAE9BC,QAF8B,EAG9BC,YAH8B,EAI9B,CAAC,GAAGC,IAAJ,CAJ8B,EAK9B,CAAC,GAAGC,QAAJ,CAL8B,KAM3B;AACH,QAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAMI,MAAM,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAQD,OAAd;;AACA,SAAK,MAAM,CAACE,CAAD,EAAIC,OAAJ,CAAX,IAA2BT,QAAQ,CAACU,OAAT,EAA3B,EAA+C;AAC7C,YAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBH,OAAxB;;AACA,UAAID,CAAC,KAAKP,IAAV,EAAgB;AACd,YAAIM,CAAC,GAAG,CAACI,GAAG,CAACE,OAAJ,CAAYC,SAArB,EAAgC;AAC9B,gBAAMC,aAAa,GAAGrB,OAAO,CAACE,YAAD,EAAegB,QAAf,CAA7B;;AACA,cAAI,CAACG,aAAL,EAAoB;AAClBlB,YAAAA,QAAQ,CAACe,QAAD,CAAR,CADkB,CAElB;AACD;AACF;AACF,OARD,MAQO;AACL,cAAM,CAACI,OAAD,IAAYhB,QAAQ,CAACQ,CAAC,GAAG,CAAL,CAA1B;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;;AACA,YAAID,CAAC,IAAIS,OAAO,CAACH,OAAR,CAAgBC,SAArB,IAAkCP,CAAC,IAAI,CAACI,GAAG,CAACE,OAAJ,CAAYC,SAAxD,EAAmE;AACjE,gBAAMC,aAAa,GAAGrB,OAAO,CAACE,YAAD,EAAegB,QAAf,CAA7B;;AACA,cAAI,CAACG,aAAL,EAAoB;AAClBlB,YAAAA,QAAQ,CAACe,QAAD,CAAR,CADkB,CAElB;AACD;AACF,SAND,MAMO;AACL,gBAAMG,aAAa,GAAGrB,OAAO,CAACE,YAAD,EAAeE,YAAf,CAA7B;;AACA,cAAI,CAACiB,aAAL,EAAoB;AAClBlB,YAAAA,QAAQ,CAACC,YAAD,CAAR,CADkB,CAElB;AACD;AACF;AACF;AACF;AACF,GA9BD;;AAgCA,SAAOL,iBAAiB,CAACY,MAAD,EAASN,IAAT,CAAxB;AACD,CA1CM","sourcesContent":["import { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { isEqual } from 'lodash';\n\nexport const useActiveSection = (\n  currentState,\n  callback,\n  defaultState,\n  [...deps],\n  [...sections],\n) => {\n  const last = sections.length - 1;\n  console.log(last);\n  const effect = ({ currPos }) => {\n    const { y } = currPos;\n    for (const [i, section] of sections.entries()) {\n      const [ref, stateObj] = section;\n      if (i === last) {\n        if (y < -ref.current.offsetTop) {\n          const sameAsCurrent = isEqual(currentState, stateObj);\n          if (!sameAsCurrent) {\n            callback(stateObj);\n            // break;\n          }\n        }\n      } else {\n        const [nextRef] = sections[i + 1];\n        console.log(i);\n        if (y >= nextRef.current.offsetTop && y <= -ref.current.offsetTop) {\n          const sameAsCurrent = isEqual(currentState, stateObj);\n          if (!sameAsCurrent) {\n            callback(stateObj);\n            // break;\n          }\n        } else {\n          const sameAsCurrent = isEqual(currentState, defaultState);\n          if (!sameAsCurrent) {\n            callback(defaultState);\n            // break;\n          }\n        }\n      }\n    }\n  };\n\n  return useScrollPosition(effect, deps);\n};\n"]},"metadata":{},"sourceType":"module"}