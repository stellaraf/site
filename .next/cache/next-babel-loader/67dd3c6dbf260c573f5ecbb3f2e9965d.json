{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/components/USMap.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Box, Tooltip } from '@chakra-ui/core';\nimport { MdMyLocation } from 'react-icons/md';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nexport const USMap = ({\n  geoData,\n  locations\n}) => {\n  return __jsx(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Geographies, {\n    geography: geoData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, ({\n    geographies\n  }) => __jsx(React.Fragment, null, geographies.map(geo => __jsx(Geography, {\n    key: geo.rsmKey // stroke=\"#FFF\"\n    ,\n    geography: geo,\n    fill: \"#DDD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  })), locations && locations.map(loc => {\n    if (loc.active) {\n      return __jsx(Marker, {\n        coordinates: [loc.coordinates.lon, loc.coordinates.lat],\n        key: loc.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, __jsx(Tooltip, {\n        label: loc.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }\n      }, __jsx(Box, {\n        as: MdMyLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      })));\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/components/USMap.js"],"names":["React","Box","Tooltip","MdMyLocation","ComposableMap","Geographies","Geography","Marker","USMap","geoData","locations","geographies","map","geo","rsmKey","loc","active","coordinates","lon","lat","id","displayName"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,mBAA9D;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AAC/C,SACE,MAAC,aAAD;AAAe,IAAA,UAAU,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAED,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA;AAAF,GAAD,KACC,4BACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAClB,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,MADX,CAEE;AAFF;AAGE,IAAA,SAAS,EAAED,GAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EASGH,SAAS,IACRA,SAAS,CAACE,GAAV,CAAcG,GAAG,IAAI;AACnB,QAAIA,GAAG,CAACC,MAAR,EAAgB;AACd,aACE,MAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,CAACD,GAAG,CAACE,WAAJ,CAAgBC,GAAjB,EAAsBH,GAAG,CAACE,WAAJ,CAAgBE,GAAtC,CAArB;AAAiE,QAAA,GAAG,EAAEJ,GAAG,CAACK,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAEL,GAAG,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAElB,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;AACF,GAVD,CAVJ,CAFJ,CADF,CADF;AA8BD,CA/BM","sourcesContent":["import * as React from 'react';\nimport { Box, Tooltip } from '@chakra-ui/core';\nimport { MdMyLocation } from 'react-icons/md';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\n\nexport const USMap = ({ geoData, locations }) => {\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoData}>\n        {({ geographies }) => (\n          <>\n            {geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                // stroke=\"#FFF\"\n                geography={geo}\n                fill=\"#DDD\"\n              />\n            ))}\n            {locations &&\n              locations.map(loc => {\n                if (loc.active) {\n                  return (\n                    <Marker coordinates={[loc.coordinates.lon, loc.coordinates.lat]} key={loc.id}>\n                      <Tooltip label={loc.displayName}>\n                        <Box as={MdMyLocation} />\n                      </Tooltip>\n                    </Marker>\n                  );\n                }\n              })}\n          </>\n        )}\n      </Geographies>\n    </ComposableMap>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}