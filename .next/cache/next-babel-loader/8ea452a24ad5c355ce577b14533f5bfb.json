{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText\n    } = rawContent.items[0].fields;\n    const body = documentToReactComponents(bodyObj);\n  } catch (err) {\n    error = err.message;\n  }\n\n  return _objectSpread({\n    error\n  }, obj);\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/usePageContent.js"],"names":["useState","BLOCKS","MARKS","documentToReactComponents","usePageContent","rawContent","obj","error","title","rawTitle","subtitle","rawSubtitle","body","bodyObj","button","showButton","buttonLink","rawButtonLink","buttonText","rawButtonText","items","fields","err","message"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,6BAA9B;AACA,SAASC,yBAAT,QAA0C,sCAA1C;AAEA,OAAO,MAAMC,cAAc,GAAGC,UAAU,IAAI;AAC1C,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAJ;;AACA,MAAI;AACF,UAAM;AACJC,MAAAA,KAAK,EAAEC,QADH;AAEJC,MAAAA,QAAQ,EAAEC,WAFN;AAGJC,MAAAA,IAAI,EAAEC,OAHF;AAIJC,MAAAA,MAAM,EAAEC,UAJJ;AAKJC,MAAAA,UAAU,EAAEC,aALR;AAMJC,MAAAA,UAAU,EAAEC;AANR,QAOFd,UAAU,CAACe,KAAX,CAAiB,CAAjB,EAAoBC,MAPxB;AAQA,UAAMT,IAAI,GAAGT,yBAAyB,CAACU,OAAD,CAAtC;AACD,GAVD,CAUE,OAAOS,GAAP,EAAY;AACZf,IAAAA,KAAK,GAAGe,GAAG,CAACC,OAAZ;AACD;;AACD;AAAShB,IAAAA;AAAT,KAAmBD,GAAnB;AACD,CAjBM","sourcesContent":["import { useState } from 'react';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText,\n    } = rawContent.items[0].fields;\n    const body = documentToReactComponents(bodyObj);\n  } catch (err) {\n    error = err.message;\n  }\n  return { error, ...obj };\n};\n"]},"metadata":{},"sourceType":"module"}