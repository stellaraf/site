{"ast":null,"code":"import { useEffect, useState, useMemo } from \"react\";\nexport const useLinkType = href => {\n  const {\n    0: external,\n    1: setExternal\n  } = useState(false);\n  const {\n    0: linkTarget,\n    1: setTarget\n  } = useState(href);\n  useEffect(() => {\n    if (linkTarget.match(/(http|https|mailto)\\:\\/\\/.*/g)) {\n      !external && setExternal(true);\n    } else {\n      let prefix = \"/\";\n\n      if (linkTarget[0] === prefix) {\n        setTarget(current => current.substring(1));\n      }\n\n      if (!linkTarget.includes(\".mdx\") && linkTarget.includes(\"#\")) {\n        prefix = \"\";\n      }\n\n      let parts = linkTarget.split(\".mdx\");\n      setTarget([prefix, ...parts].join(\"\"));\n    }\n  }, [href]);\n  const isExternal = useMemo(() => external);\n  const target = useMemo(() => linkTarget);\n  return {\n    isExternal,\n    target\n  };\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/useLinkType.js"],"names":["useEffect","useState","useMemo","useLinkType","href","external","setExternal","linkTarget","setTarget","match","prefix","current","substring","includes","parts","split","join","isExternal","target"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AACjC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA0BP,QAAQ,CAACG,IAAD,CAAxC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,UAAU,CAACE,KAAX,CAAiB,8BAAjB,CAAJ,EAAsD;AACpD,OAACJ,QAAD,IAAaC,WAAW,CAAC,IAAD,CAAxB;AACD,KAFD,MAEO;AACL,UAAII,MAAM,GAAG,GAAb;;AACA,UAAIH,UAAU,CAAC,CAAD,CAAV,KAAkBG,MAAtB,EAA8B;AAC5BF,QAAAA,SAAS,CAACG,OAAO,IAAIA,OAAO,CAACC,SAAR,CAAkB,CAAlB,CAAZ,CAAT;AACD;;AACD,UAAI,CAACL,UAAU,CAACM,QAAX,CAAoB,MAApB,CAAD,IAAgCN,UAAU,CAACM,QAAX,CAAoB,GAApB,CAApC,EAA8D;AAC5DH,QAAAA,MAAM,GAAG,EAAT;AACD;;AACD,UAAII,KAAK,GAAGP,UAAU,CAACQ,KAAX,CAAiB,MAAjB,CAAZ;AACAP,MAAAA,SAAS,CAAC,CAACE,MAAD,EAAS,GAAGI,KAAZ,EAAmBE,IAAnB,CAAwB,EAAxB,CAAD,CAAT;AACD;AACF,GAdQ,EAcN,CAACZ,IAAD,CAdM,CAAT;AAgBA,QAAMa,UAAU,GAAGf,OAAO,CAAC,MAAMG,QAAP,CAA1B;AACA,QAAMa,MAAM,GAAGhB,OAAO,CAAC,MAAMK,UAAP,CAAtB;AACA,SAAO;AAAEU,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACD,CAtBM","sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\n\nexport const useLinkType = href => {\n  const [external, setExternal] = useState(false);\n  const [linkTarget, setTarget] = useState(href);\n  useEffect(() => {\n    if (linkTarget.match(/(http|https|mailto)\\:\\/\\/.*/g)) {\n      !external && setExternal(true);\n    } else {\n      let prefix = \"/\";\n      if (linkTarget[0] === prefix) {\n        setTarget(current => current.substring(1));\n      }\n      if (!linkTarget.includes(\".mdx\") && linkTarget.includes(\"#\")) {\n        prefix = \"\";\n      }\n      let parts = linkTarget.split(\".mdx\");\n      setTarget([prefix, ...parts].join(\"\"));\n    }\n  }, [href]);\n\n  const isExternal = useMemo(() => external);\n  const target = useMemo(() => linkTarget);\n  return { isExternal, target };\n};\n"]},"metadata":{},"sourceType":"module"}