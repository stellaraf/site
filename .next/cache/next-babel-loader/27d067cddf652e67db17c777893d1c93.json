{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/components/Controls.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Box, Button, Stack } from '@chakra-ui/core';\nimport { WiDaySunny } from 'react-icons/wi';\nimport { BsMoon } from 'react-icons/bs';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { useColorMode } from '../context';\nconst bg = {\n  dark: 'original.tertiary',\n  light: 'original.secondary'\n};\nconst color = {\n  dark: 'original.dark',\n  light: 'original.light'\n};\nconst iconColor = {\n  dark: 'yellow',\n  light: 'red'\n};\nconst icon = {\n  dark: WiDaySunny,\n  light: BsMoon\n};\n\nconst scrollToTop = () => {\n  if (true) {\n    return;\n  }\n\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n  });\n  window.document.activeElement.blur();\n};\n\nexport const Controls = props => {\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const colorModeLabel = `Switch to ${colorMode === 'light' ? 'Dark' : 'Light'} Mode`;\n  return __jsx(Box, _extends({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    pos: \"fixed\",\n    bottom: \"25px\",\n    right: \"0\",\n    w: \"2rem\",\n    borderTopLeftRadius: \"xl\",\n    borderBottomLeftRadius: \"xl\",\n    h: \"6rem\",\n    py: 4,\n    bg: bg[colorMode],\n    color: color[colorMode],\n    zIndex: 1\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), __jsx(Stack, {\n    pos: \"relative\",\n    flexDir: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    py: 2,\n    onClick: toggleColorMode,\n    variant: \"unstyled\",\n    minW: \"unset\",\n    h: \"unset\",\n    title: colorModeLabel,\n    \"aria-label\": colorModeLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    as: icon[colorMode],\n    color: iconColor[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), __jsx(Button, {\n    py: 2,\n    onClick: scrollToTop,\n    variant: \"unstyled\",\n    minW: \"unset\",\n    h: \"unset\",\n    \"aria-label\": \"Scroll to Top\",\n    title: \"Scroll to Top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    as: FaChevronUp,\n    color: iconColor[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/components/Controls.js"],"names":["React","Box","Button","Stack","WiDaySunny","BsMoon","FaChevronUp","useColorMode","bg","dark","light","color","iconColor","icon","scrollToTop","window","scrollTo","top","behavior","document","activeElement","blur","Controls","props","colorMode","toggleColorMode","colorModeLabel"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Box, Button, Stack } from '@chakra-ui/core';\nimport { WiDaySunny } from 'react-icons/wi';\nimport { BsMoon } from 'react-icons/bs';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { useColorMode } from '../context';\n\nconst bg = { dark: 'original.tertiary', light: 'original.secondary' };\nconst color = { dark: 'original.dark', light: 'original.light' };\n\nconst iconColor = { dark: 'yellow', light: 'red' };\nconst icon = { dark: WiDaySunny, light: BsMoon };\n\nconst scrollToTop = () => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n  window.document.activeElement.blur();\n};\n\nexport const Controls = props => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const colorModeLabel = `Switch to ${colorMode === 'light' ? 'Dark' : 'Light'} Mode`;\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      pos=\"fixed\"\n      bottom=\"25px\"\n      right=\"0\"\n      w=\"2rem\"\n      borderTopLeftRadius=\"xl\"\n      borderBottomLeftRadius=\"xl\"\n      h=\"6rem\"\n      py={4}\n      bg={bg[colorMode]}\n      color={color[colorMode]}\n      zIndex={1}\n      {...props}>\n      <Stack pos=\"relative\" flexDir=\"column\">\n        <Button\n          py={2}\n          onClick={toggleColorMode}\n          variant=\"unstyled\"\n          minW=\"unset\"\n          h=\"unset\"\n          title={colorModeLabel}\n          aria-label={colorModeLabel}>\n          <Box as={icon[colorMode]} color={iconColor[colorMode]} />\n        </Button>\n        <Button\n          py={2}\n          onClick={scrollToTop}\n          variant=\"unstyled\"\n          minW=\"unset\"\n          h=\"unset\"\n          aria-label=\"Scroll to Top\"\n          title=\"Scroll to Top\">\n          <Box as={FaChevronUp} color={iconColor[colorMode]} />\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}