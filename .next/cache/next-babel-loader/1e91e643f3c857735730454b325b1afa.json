{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/ml/dev/stellar/site/hooks/usePageContent.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Heading, Text } from '@chakra-ui/core';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Title = props => __jsx(Heading, _extends({\n  as: \"h3\",\n  fontSize: \"4xl\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 24\n  }\n}));\n\n_c = Title;\n\nconst Subtitle = props => __jsx(Heading, _extends({\n  as: \"h4\",\n  fontSize: \"xl\",\n  fontWeight: \"light\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }\n}));\n\n_c2 = Subtitle;\n\nconst Body = props => __jsx(Text, _extends({\n  my: 16,\n  maxW: [null, null, '60%'],\n  whiteSpace: \"pre-line\",\n  fontSize: \"lg\",\n  textAlign: \"justify\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}));\n\n_c3 = Body;\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText\n    } = rawContent.fields;\n    const body = documentToReactComponents(bodyObj);\n    obj = {\n      title: __jsx(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, rawTitle),\n      subtitle: __jsx(Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, rawSubtitle),\n      body: __jsx(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, body),\n      showButton,\n      buttonText: rawButtonText,\n      buttonLink: rawButtonLink\n    };\n  } catch (err) {\n    error = err.message;\n  }\n\n  return _objectSpread({\n    error\n  }, obj);\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Subtitle\");\n$RefreshReg$(_c3, \"Body\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/usePageContent.js"],"names":["React","Heading","Text","BLOCKS","MARKS","documentToReactComponents","Title","props","Subtitle","Body","usePageContent","rawContent","obj","error","title","rawTitle","subtitle","rawSubtitle","body","bodyObj","button","showButton","buttonLink","rawButtonLink","buttonText","rawButtonText","fields","err","message"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,6BAA9B;AACA,SAASC,yBAAT,QAA0C,sCAA1C;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI,MAAC,OAAD;AAAS,EAAA,EAAE,EAAC,IAAZ;AAAiB,EAAA,QAAQ,EAAC;AAA1B,GAAoCA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;KAAMD,K;;AACN,MAAME,QAAQ,GAAGD,KAAK,IAAI,MAAC,OAAD;AAAS,EAAA,EAAE,EAAC,IAAZ;AAAiB,EAAA,QAAQ,EAAC,IAA1B;AAA+B,EAAA,UAAU,EAAC;AAA1C,GAAsDA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;MAAMC,Q;;AACN,MAAMC,IAAI,GAAGF,KAAK,IAChB,MAAC,IAAD;AACE,EAAA,EAAE,EAAE,EADN;AAEE,EAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAFR;AAGE,EAAA,UAAU,EAAC,UAHb;AAIE,EAAA,QAAQ,EAAC,IAJX;AAKE,EAAA,SAAS,EAAC;AALZ,GAMMA,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;MAAME,I;AAWN,OAAO,MAAMC,cAAc,GAAGC,UAAU,IAAI;AAC1C,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAJ;;AACA,MAAI;AACF,UAAM;AACJC,MAAAA,KAAK,EAAEC,QADH;AAEJC,MAAAA,QAAQ,EAAEC,WAFN;AAGJC,MAAAA,IAAI,EAAEC,OAHF;AAIJC,MAAAA,MAAM,EAAEC,UAJJ;AAKJC,MAAAA,UAAU,EAAEC,aALR;AAMJC,MAAAA,UAAU,EAAEC;AANR,QAOFd,UAAU,CAACe,MAPf;AAQA,UAAMR,IAAI,GAAGb,yBAAyB,CAACc,OAAD,CAAtC;AACAP,IAAAA,GAAG,GAAG;AACJE,MAAAA,KAAK,EAAE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,QAAR,CADH;AAEJC,MAAAA,QAAQ,EAAE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWC,WAAX,CAFN;AAGJC,MAAAA,IAAI,EAAE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CAHF;AAIJG,MAAAA,UAJI;AAKJG,MAAAA,UAAU,EAAEC,aALR;AAMJH,MAAAA,UAAU,EAAEC;AANR,KAAN;AAQD,GAlBD,CAkBE,OAAOI,GAAP,EAAY;AACZd,IAAAA,KAAK,GAAGc,GAAG,CAACC,OAAZ;AACD;;AACD;AAASf,IAAAA;AAAT,KAAmBD,GAAnB;AACD,CAzBM","sourcesContent":["import * as React from 'react';\nimport { Heading, Text } from '@chakra-ui/core';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Title = props => <Heading as=\"h3\" fontSize=\"4xl\" {...props} />;\nconst Subtitle = props => <Heading as=\"h4\" fontSize=\"xl\" fontWeight=\"light\" {...props} />;\nconst Body = props => (\n  <Text\n    my={16}\n    maxW={[null, null, '60%']}\n    whiteSpace=\"pre-line\"\n    fontSize=\"lg\"\n    textAlign=\"justify\"\n    {...props}\n  />\n);\n\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText,\n    } = rawContent.fields;\n    const body = documentToReactComponents(bodyObj);\n    obj = {\n      title: <Title>{rawTitle}</Title>,\n      subtitle: <Subtitle>{rawSubtitle}</Subtitle>,\n      body: <Body>{body}</Body>,\n      showButton,\n      buttonText: rawButtonText,\n      buttonLink: rawButtonLink,\n    };\n  } catch (err) {\n    error = err.message;\n  }\n  return { error, ...obj };\n};\n"]},"metadata":{},"sourceType":"module"}