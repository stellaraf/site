{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/context/GlobalState.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { createContext, useContext, useMemo, useState } from 'react';\nconst GlobalStateContext = createContext(null);\nexport const GlobalStateProvider = ({\n  children\n}) => {\n  const {\n    0: headerStyle,\n    1: setHeaderStyle\n  } = useState(null);\n  const {\n    0: headerLogo,\n    1: setHeaderLogo\n  } = useState(false);\n  const value = useMemo(() => ({\n    headerStyle,\n    setHeaderStyle,\n    headerLogo,\n    setHeaderLogo\n  }));\n  return __jsx(GlobalStateContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, children);\n};\nexport const useGlobalState = () => useContext(GlobalStateContext);","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/context/GlobalState.js"],"names":["React","createContext","useContext","useMemo","useState","GlobalStateContext","GlobalStateProvider","children","headerStyle","setHeaderStyle","headerLogo","setHeaderLogo","value","useGlobalState"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,QAA7C,QAA6D,OAA7D;AAEA,MAAMC,kBAAkB,GAAGJ,aAAa,CAAC,IAAD,CAAxC;AAEA,OAAO,MAAMK,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMQ,KAAK,GAAGT,OAAO,CAAC,OAAO;AAAEK,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,UAA/B;AAA2CC,IAAAA;AAA3C,GAAP,CAAD,CAArB;AACA,SAAO,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CL,QAA5C,CAAP;AACD,CALM;AAOP,OAAO,MAAMM,cAAc,GAAG,MAAMX,UAAU,CAACG,kBAAD,CAAvC","sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, useMemo, useState } from 'react';\n\nconst GlobalStateContext = createContext(null);\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [headerStyle, setHeaderStyle] = useState(null);\n  const [headerLogo, setHeaderLogo] = useState(false);\n  const value = useMemo(() => ({ headerStyle, setHeaderStyle, headerLogo, setHeaderLogo }));\n  return <GlobalStateContext.Provider value={value}>{children}</GlobalStateContext.Provider>;\n};\n\nexport const useGlobalState = () => useContext(GlobalStateContext);\n"]},"metadata":{},"sourceType":"module"}