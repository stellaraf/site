{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/hooks/usePageContent.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Box, Grid, Heading, Text } from '@chakra-ui/core';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Title = props => __jsx(Heading, _extends({\n  as: \"h3\",\n  fontSize: \"4xl\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 24\n  }\n}));\n\nconst Subtitle = props => __jsx(Heading, _extends({\n  as: \"h4\",\n  fontSize: \"xl\",\n  fontWeight: \"light\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }\n}));\n\nconst Body = props => __jsx(Text, _extends({\n  my: 16,\n  maxW: [null, null, '60%'],\n  whiteSpace: \"pre-line\",\n  fontSize: \"lg\",\n  textAlign: \"justify\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}));\n\nconst Subsections = props => {\n  console.log(props);\n  return __jsx(Grid, {\n    templateColumns: \"repeat(2, 1fr)\",\n    gap: 16,\n    my: 16,\n    maxW: [null, null, '80%'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Box, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText,\n      pageSectionParagraph\n    } = rawContent.fields;\n    let body = null;\n    let subsections = null;\n\n    if (bodyObj) {\n      body = __jsx(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, documentToReactComponents(bodyObj));\n    }\n\n    if (pageSectionParagraph) {\n      subsections = __jsx(Subsections, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, documentToReactComponents(pageSectionParagraph));\n    }\n\n    console.log(pageSectionParagraph);\n    obj = {\n      title: __jsx(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, rawTitle),\n      subtitle: __jsx(Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, rawSubtitle),\n      buttonText: rawButtonText,\n      buttonLink: rawButtonLink,\n      showButton,\n      body,\n      subsections\n    };\n  } catch (err) {\n    error = err.message;\n  }\n\n  return _objectSpread({\n    error\n  }, obj);\n};","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/hooks/usePageContent.js"],"names":["React","Box","Grid","Heading","Text","BLOCKS","MARKS","documentToReactComponents","Title","props","Subtitle","Body","Subsections","console","log","usePageContent","rawContent","obj","error","title","rawTitle","subtitle","rawSubtitle","body","bodyObj","button","showButton","buttonLink","rawButtonLink","buttonText","rawButtonText","pageSectionParagraph","fields","subsections","err","message"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Box, Grid, Heading, Text } from '@chakra-ui/core';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Title = props => <Heading as=\"h3\" fontSize=\"4xl\" {...props} />;\nconst Subtitle = props => <Heading as=\"h4\" fontSize=\"xl\" fontWeight=\"light\" {...props} />;\nconst Body = props => (\n  <Text\n    my={16}\n    maxW={[null, null, '60%']}\n    whiteSpace=\"pre-line\"\n    fontSize=\"lg\"\n    textAlign=\"justify\"\n    {...props}\n  />\n);\n\nconst Subsections = props => {\n  console.log(props);\n  return (\n    <Grid templateColumns=\"repeat(2, 1fr)\" gap={16} my={16} maxW={[null, null, '80%']}>\n      <Box {...props} />\n    </Grid>\n  );\n};\n\nexport const usePageContent = rawContent => {\n  let obj = {};\n  let error;\n  try {\n    const {\n      title: rawTitle,\n      subtitle: rawSubtitle,\n      body: bodyObj,\n      button: showButton,\n      buttonLink: rawButtonLink,\n      buttonText: rawButtonText,\n      pageSectionParagraph,\n    } = rawContent.fields;\n    let body = null;\n    let subsections = null;\n    if (bodyObj) {\n      body = <Body>{documentToReactComponents(bodyObj)}</Body>;\n    }\n    if (pageSectionParagraph) {\n      subsections = <Subsections>{documentToReactComponents(pageSectionParagraph)}</Subsections>;\n    }\n    console.log(pageSectionParagraph);\n    obj = {\n      title: <Title>{rawTitle}</Title>,\n      subtitle: <Subtitle>{rawSubtitle}</Subtitle>,\n      buttonText: rawButtonText,\n      buttonLink: rawButtonLink,\n      showButton,\n      body,\n      subsections,\n    };\n  } catch (err) {\n    error = err.message;\n  }\n  return { error, ...obj };\n};\n"]},"metadata":{},"sourceType":"module"}