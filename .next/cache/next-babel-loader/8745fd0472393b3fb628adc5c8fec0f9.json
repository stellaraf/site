{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\n\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.router = exports.version = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\n\nvar _router = require(\"next/router\");\n\nvar _querystring = require(\"querystring\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _routerContext = require(\"../next-server/lib/router-context\");\n\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\n\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\n\nvar _utils = require(\"../next-server/lib/utils\");\n\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\n\nvar _pageLoader = _interopRequireDefault(require(\"./page-loader\"));\n\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\n/* global location */\n/// <reference types=\"react-dom/experimental\" />\n\n\nif (!('finally' in Promise.prototype)) {\n  // eslint-disable-next-line no-extend-native\n  Promise.prototype.finally = require('next/dist/build/polyfills/finally-polyfill.min');\n}\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nconst version = \"9.4.4\";\nexports.version = version;\nconst {\n  props,\n  err,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback\n} = data;\nconst prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n\n__webpack_public_path__ = `${prefix}/_next/`; //eslint-disable-line\n// Initialize next/config with the environment configuration\n\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nconst asPath = (0, _utils.getURL)();\nconst pageLoader = new _pageLoader.default(buildId, prefix);\n\nconst register = ([r, f]) => pageLoader.registerPage(r, f);\n\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(p => setTimeout(() => register(p), 0));\n}\n\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nconst updateHead = (0, _headManager.default)();\nconst appElement = document.getElementById('__next');\nlet lastAppProps;\nlet lastRenderReject;\nlet webpackHMR;\nlet router;\nexports.router = router;\nlet Component;\nlet App, onPerfEntry;\n\nclass Container extends _react.default.Component {\n  componentDidCatch(err, info) {\n    this.props.fn(err, info);\n  }\n\n  componentDidMount() {\n    this.scrollToHash();\n\n    if (process.env.__NEXT_PLUGINS) {\n      // eslint-disable-next-line\n      Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=unstable-post-hydration!'))).then(mod => {\n        return mod.default();\n      }).catch(err => {\n        console.error('Error calling post-hydration for plugins', err);\n      });\n    } // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n\n\n    if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || props && props.__N_SSG && location.search)) {\n      // update query on mount for exported pages\n      router.replace(router.pathname + '?' + (0, _querystring.stringify)((0, _extends2.default)((0, _extends2.default)({}, router.query), (0, _querystring.parse)(location.search.substr(1)))), asPath, {\n        // WARNING: `_h` is an internal option for handing Next.js\n        // client-side hydration. Your app should _never_ use this property.\n        // It may change at any time without notice.\n        _h: 1,\n        // Fallback pages must trigger the data fetch, so the transition is\n        // not shallow.\n        // Other pages (strictly updating query) happens shallowly, as data\n        // requirements would already be present.\n        shallow: !isFallback\n      });\n    }\n\n    if (process.env.__NEXT_TEST_MODE) {\n      window.__NEXT_HYDRATED = true;\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash();\n  }\n\n  scrollToHash() {\n    let {\n      hash\n    } = location;\n    hash = hash && hash.substring(1);\n    if (!hash) return;\n    const el = document.getElementById(hash);\n    if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n\n    setTimeout(() => el.scrollIntoView(), 0);\n  }\n\n  render() {\n    if (false) {\n      return this.props.children;\n    }\n\n    if (true) {\n      const {\n        ReactDevOverlay\n      } = require('@next/react-dev-overlay/lib/client');\n\n      return /*#__PURE__*/_react.default.createElement(ReactDevOverlay, null, this.props.children);\n    }\n  }\n\n}\n\nconst emitter = (0, _mitt.default)();\nexports.emitter = emitter;\n\nvar _default = async ({\n  webpackHMR: passedWebpackHMR\n} = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (true) {\n    webpackHMR = passedWebpackHMR;\n  }\n\n  const {\n    page: app,\n    mod\n  } = await pageLoader.loadPageScript('/_app');\n  App = app;\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n      let perfStartEntry;\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime;\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n      });\n    };\n  }\n\n  let initialErr = err;\n\n  try {\n    ;\n    ({\n      page: Component\n    } = await pageLoader.loadPage(page));\n\n    if (true) {\n      const {\n        isValidElementType\n      } = require('react-is');\n\n      if (!isValidElementType(Component)) {\n        throw new Error(`The default export is not a React Component in page: \"${page}\"`);\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error;\n  }\n\n  if (true) {\n    const {\n      getNodeError\n    } = require('@next/react-dev-overlay/lib/client'); // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n\n\n    if (initialErr) {\n      if (initialErr === err) {\n        setTimeout(() => {\n          let error;\n\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr.message);\n          } catch (e) {\n            error = e;\n          }\n\n          error.name = initialErr.name;\n          error.stack = initialErr.stack;\n          const node = getNodeError(error);\n          throw node;\n        });\n      } // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n          setTimeout(() => {\n            throw initialErr;\n          });\n        }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds);\n  }\n\n  exports.router = router = (0, _router.createRouter)(page, query, asPath, {\n    initialProps: props,\n    pageLoader,\n    App,\n    Component,\n    wrapApp,\n    err: initialErr,\n    isFallback,\n    subscription: ({\n      Component,\n      props,\n      err\n    }, App) => render({\n      App,\n      Component,\n      props,\n      err\n    })\n  }); // call init-client middleware\n\n  if (process.env.__NEXT_PLUGINS) {\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-init-client!'))).then(mod => {\n      return mod.default({\n        router\n      });\n    }).catch(err => {\n      console.error('Error calling client-init for plugins', err);\n    });\n  }\n\n  const renderCtx = {\n    App,\n    Component,\n    props,\n    err: initialErr\n  };\n\n  if (false) {\n    render(renderCtx);\n    return emitter;\n  }\n\n  if (true) {\n    return {\n      emitter,\n      render,\n      renderCtx\n    };\n  }\n};\n\nexports.default = _default;\n\nasync function render(props) {\n  if (props.err) {\n    await renderError(props);\n    return;\n  }\n\n  try {\n    await doRender(props);\n  } catch (err) {\n    if (true) {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    await renderError((0, _extends2.default)((0, _extends2.default)({}, props), {}, {\n      err\n    }));\n  }\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\n\n\nfunction renderError(props) {\n  const {\n    App,\n    err\n  } = props; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      err: null\n    });\n  }\n\n  if (process.env.__NEXT_PLUGINS) {\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-error-client!'))).then(mod => {\n      return mod.default({\n        err\n      });\n    }).catch(err => {\n      console.error('error calling on-error-client for plugins', err);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n\n\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(({\n    page: ErrorComponent\n  }) => {\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App);\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: {\n        err,\n        pathname: page,\n        query,\n        asPath,\n        AppTree\n      }\n    };\n    return Promise.resolve(props.props ? props.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(initProps => doRender((0, _extends2.default)((0, _extends2.default)({}, props), {}, {\n      err,\n      Component: ErrorComponent,\n      props: initProps\n    })));\n  });\n} // If hydrate does not exist, eg in preact.\n\n\nlet isInitialRender = typeof _reactDom.default.hydrate === 'function';\nlet reactRoot = null;\n\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom.default.unstable_createRoot(domEl, opts) : _reactDom.default.unstable_createBlockingRoot(domEl, opts);\n    }\n\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n\n\n    if (isInitialRender) {\n      _reactDom.default.hydrate(reactEl, domEl, markHydrateComplete);\n\n      isInitialRender = false;\n\n      if (onPerfEntry && _utils.ST) {\n        (0, _performanceRelayer.default)(onPerfEntry);\n      }\n    } else {\n      _reactDom.default.render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n}\n\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n\n  if (!navStartEntries.length) {\n    return;\n  }\n\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(measure => performance.clearMeasures(measure));\n}\n\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(mark => performance.clearMarks(mark));\n}\n\nfunction AppContainer({\n  children\n}) {\n  return /*#__PURE__*/_react.default.createElement(Container, {\n    fn: error => renderError({\n      App,\n      err: error\n    }).catch(err => console.error('Error rendering page: ', err))\n  }, /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: updateHead\n  }, children)));\n}\n\n_c = AppContainer;\n\nconst wrapApp = App => props => {\n  const appProps = (0, _extends2.default)((0, _extends2.default)({}, props), {}, {\n    Component,\n    err,\n    router\n  });\n  return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps));\n};\n\nasync function doRender({\n  App,\n  Component,\n  props,\n  err\n}) {\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  const appProps = (0, _extends2.default)((0, _extends2.default)({}, props), {}, {\n    Component,\n    err,\n    router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n\n  lastAppProps = appProps;\n  let resolvePromise;\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject();\n    }\n\n    resolvePromise = () => {\n      lastRenderReject = null;\n      resolve();\n    };\n\n    lastRenderReject = () => {\n      lastRenderReject = null;\n      reject();\n    };\n  });\n\n  const elem = /*#__PURE__*/_react.default.createElement(Root, {\n    callback: resolvePromise\n  }, /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps))); // We catch runtime errors using componentDidCatch which will trigger renderError\n\n\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, elem) : elem, appElement);\n  await renderPromise;\n}\n\nfunction Root({\n  callback,\n  children\n}) {\n  _s();\n\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n\n  return children;\n}\n\n_s(Root, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c2 = Root;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");","map":{"version":3,"sources":["../../client/index.js"],"names":["Promise","require","data","JSON","document","window","version","process","__NEXT_VERSION","dynamicIds","isFallback","prefix","__webpack_public_path__","envConfig","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","asPath","pageLoader","PageLoader","register","p","setTimeout","updateHead","appElement","React","Component","componentDidCatch","componentDidMount","mod","err","console","router","location","props","_h","shallow","componentDidUpdate","scrollToHash","hash","el","render","emitter","webpackHMR","page","App","onPerfEntry","uniqueID","Date","Math","entries","perfStartEntry","id","startTime","value","label","entryType","initialErr","isValidElementType","error","node","getNodeError","initialProps","subscription","renderCtx","renderError","doRender","AppTree","wrapApp","appCtx","ctx","pathname","initProps","isInitialRender","ReactDOM","reactRoot","opts","hydrate","ST","performance","clearMarks","navStartEntries","measure","mark","appProps","lastAppProps","renderPromise","lastRenderReject","resolvePromise","resolve","reject","elem","renderReactElement","callback"],"mappings":"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","sourcesContent":["/* global location */\nimport { createRouter, makePublicRouterInstance } from 'next/router'\nimport { parse as parseQs, stringify as stringifyQs } from 'querystring'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport { getURL, loadGetInitialProps, ST } from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader from './page-loader'\nimport measureWebVitals from './performance-relayer'\n\n/// <reference types=\"react-dom/experimental\" />\n\nif (!('finally' in Promise.prototype)) {\n  // eslint-disable-next-line no-extend-native\n  Promise.prototype.finally = require('next/dist/build/polyfills/finally-polyfill.min')\n}\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst {\n  props,\n  err,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n} = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nconst asPath = getURL()\n\nconst pageLoader = new PageLoader(buildId, prefix)\nconst register = ([r, f]) => pageLoader.registerPage(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\nwindow.__NEXT_P.push = register\n\nconst updateHead = initHeadManager()\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps\nlet lastRenderReject\nlet webpackHMR\nexport let router\nlet Component\nlet App, onPerfEntry\n\nclass Container extends React.Component {\n  componentDidCatch(err, info) {\n    this.props.fn(err, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    if (process.env.__NEXT_PLUGINS) {\n      // eslint-disable-next-line\n      import('next-plugin-loader?middleware=unstable-post-hydration!')\n        .then((mod) => {\n          return mod.default()\n        })\n        .catch((err) => {\n          console.error('Error calling post-hydration for plugins', err)\n        })\n    }\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (props && props.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          stringifyQs({\n            ...router.query,\n            ...parseQs(location.search.substr(1)),\n          }),\n        asPath,\n        {\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n\n    if (process.env.__NEXT_TEST_MODE) {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async ({ webpackHMR: passedWebpackHMR } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = passedWebpackHMR\n  }\n  const { page: app, mod } = await pageLoader.loadPageScript('/_app')\n  App = app\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = err\n\n  try {\n    ;({ page: Component } = await pageLoader.loadPage(page))\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(Component)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === err) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr.name\n          error.stack = initialErr.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: props,\n    pageLoader,\n    App,\n    Component,\n    wrapApp,\n    err: initialErr,\n    isFallback,\n    subscription: ({ Component, props, err }, App) =>\n      render({ App, Component, props, err }),\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((mod) => {\n        return mod.default({ router })\n      })\n      .catch((err) => {\n        console.error('Error calling client-init for plugins', err)\n      })\n  }\n\n  const renderCtx = { App, Component, props, err: initialErr }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(props) {\n  if (props.err) {\n    await renderError(props)\n    return\n  }\n\n  try {\n    await doRender(props)\n  } catch (err) {\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw err\n      })\n    }\n    await renderError({ ...props, err })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(props) {\n  const { App, err } = props\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      err: null,\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((mod) => {\n        return mod.default({ err })\n      })\n      .catch((err) => {\n        console.error('error calling on-error-client for plugins', err)\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader.loadPage('/_error').then(({ page: ErrorComponent }) => {\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App)\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: { err, pathname: page, query, asPath, AppTree },\n    }\n    return Promise.resolve(\n      props.props ? props.props : loadGetInitialProps(App, appCtx)\n    ).then((initProps) =>\n      doRender({\n        ...props,\n        err,\n        Component: ErrorComponent,\n        props: initProps,\n      })\n    )\n  })\n}\n\n// If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof ReactDOM.hydrate === 'function'\nlet reactRoot = null\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? ReactDOM.unstable_createRoot(domEl, opts)\n          : ReactDOM.unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      isInitialRender = false\n\n      if (onPerfEntry && ST) {\n        measureWebVitals(onPerfEntry)\n      }\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({ children }) {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={updateHead}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App) => (props) => {\n  const appProps = { ...props, Component, err, router }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nasync function doRender({ App, Component, props, err }) {\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps = { ...props, Component, err, router }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let resolvePromise\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      lastRenderReject = null\n      reject()\n    }\n  })\n\n  const elem = (\n    <Root callback={resolvePromise}>\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement\n  )\n\n  await renderPromise\n}\n\nfunction Root({ callback, children }) {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  return children\n}\n"]},"metadata":{},"sourceType":"script"}