{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/ml/dev/stellar/site/components/Button.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport NextLink from \"next/link\";\nimport { Button as ChakraButton } from \"@chakra-ui/core\";\nimport { useLinkType } from \"../hooks\";\nexport const Button = (_ref) => {\n  _s();\n\n  let {\n    href = \"/\"\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"href\"]);\n\n  const {\n    isExternal,\n    target\n  } = useLinkType(href);\n  const Wrapper = isExternal ? React.Fragment : NextLink;\n  const wrapperProps = isExternal ? {} : {\n    href: target,\n    passHref: true\n  };\n  const buttonProps = isExternal ? {\n    isExternal: true,\n    href: target\n  } : {};\n  return __jsx(Wrapper, _extends({}, wrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), __jsx(ChakraButton, _extends({\n    as: \"a\",\n    px: 3,\n    py: 1,\n    lineHeight: 1.5,\n    borderRadius: \"lg\",\n    \"aria-label\": props.children\n  }, buttonProps, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(Button, \"w4KnoWx3MF62QKihhI+Nre8e3PU=\", false, function () {\n  return [useLinkType];\n});\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/components/Button.js"],"names":["React","NextLink","Button","ChakraButton","useLinkType","href","props","isExternal","target","Wrapper","Fragment","wrapperProps","passHref","buttonProps","children"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAM,IAAIC,YAAnB,QAAuC,iBAAvC;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMF,MAAM,GAAG,UAA8B;AAAA;;AAAA,MAA7B;AAAEG,IAAAA,IAAI,GAAG;AAAT,GAA6B;AAAA,MAAZC,KAAY;;AAClD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBJ,WAAW,CAACC,IAAD,CAA1C;AACA,QAAMI,OAAO,GAAGF,UAAU,GAAGP,KAAK,CAACU,QAAT,GAAoBT,QAA9C;AACA,QAAMU,YAAY,GAAGJ,UAAU,GAAG,EAAH,GAAQ;AAAEF,IAAAA,IAAI,EAAEG,MAAR;AAAgBI,IAAAA,QAAQ,EAAE;AAA1B,GAAvC;AACA,QAAMC,WAAW,GAAGN,UAAU,GAAG;AAAEA,IAAAA,UAAU,EAAE,IAAd;AAAoBF,IAAAA,IAAI,EAAEG;AAA1B,GAAH,GAAwC,EAAtE;AACA,SACE,MAAC,OAAD,eAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,YAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,UAAU,EAAE,GAJd;AAKE,IAAA,YAAY,EAAC,IALf;AAME,kBAAYL,KAAK,CAACQ;AANpB,KAOMD,WAPN,EAQMP,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAcD,CAnBM;;GAAMJ,M;UACoBE,W;;;KADpBF,M","sourcesContent":["import * as React from \"react\";\nimport NextLink from \"next/link\";\nimport { Button as ChakraButton } from \"@chakra-ui/core\";\nimport { useLinkType } from \"../hooks\";\n\nexport const Button = ({ href = \"/\", ...props }) => {\n  const { isExternal, target } = useLinkType(href);\n  const Wrapper = isExternal ? React.Fragment : NextLink;\n  const wrapperProps = isExternal ? {} : { href: target, passHref: true };\n  const buttonProps = isExternal ? { isExternal: true, href: target } : {};\n  return (\n    <Wrapper {...wrapperProps}>\n      <ChakraButton\n        as=\"a\"\n        px={3}\n        py={1}\n        lineHeight={1.5}\n        borderRadius=\"lg\"\n        aria-label={props.children}\n        {...buttonProps}\n        {...props}\n      />\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}