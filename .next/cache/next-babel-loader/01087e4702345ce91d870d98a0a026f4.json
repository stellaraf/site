{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/context/Theme.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useMemo } from \"react\";\nimport { ThemeProvider as ChakraThemeProvider } from \"@chakra-ui/core\";\nimport { useConfig } from \"./Config\";\nimport { makeTheme } from \"../util\";\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    theme\n  } = useConfig();\n  const value = useMemo(() => makeTheme(theme), [theme]);\n  return __jsx(ChakraThemeProvider, {\n    theme: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s(ThemeProvider, \"mqxtlHeMRP9Ktto25MctxSV00fA=\", false, function () {\n  return [useConfig];\n});\n\n_c = ThemeProvider;\nexport { useTheme } from \"@chakra-ui/core\";\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/context/Theme.js"],"names":["React","useMemo","ThemeProvider","ChakraThemeProvider","useConfig","makeTheme","children","theme","value","useTheme"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,aAAa,IAAIC,mBAA1B,QAAqD,iBAArD;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAO,MAAMH,aAAa,GAAG,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAYH,SAAS,EAA3B;AACA,QAAMI,KAAK,GAAGP,OAAO,CAAC,MAAMI,SAAS,CAACE,KAAD,CAAhB,EAAyB,CAACA,KAAD,CAAzB,CAArB;AACA,SAAO,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCF,QAApC,CAAP;AACD,CAJM;;GAAMJ,a;UACOE,S;;;KADPF,a;AAMb,SAASO,QAAT,QAAyB,iBAAzB","sourcesContent":["import * as React from \"react\";\nimport { useMemo } from \"react\";\nimport { ThemeProvider as ChakraThemeProvider } from \"@chakra-ui/core\";\nimport { useConfig } from \"./Config\";\nimport { makeTheme } from \"../util\";\n\nexport const ThemeProvider = ({ children }) => {\n  const { theme } = useConfig();\n  const value = useMemo(() => makeTheme(theme), [theme]);\n  return <ChakraThemeProvider theme={value}>{children}</ChakraThemeProvider>;\n};\n\nexport { useTheme } from \"@chakra-ui/core\";\n"]},"metadata":{},"sourceType":"module"}