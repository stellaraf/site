{"ast":null,"code":"var _jsxFileName = \"/Users/ml/dev/stellar/site/src/components/navbar/NavBar.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\"; // import { useLocation } from \"wouter\";\n\nimport { useRouter } from \"next/router\";\nimport { useWindowScroll, useLockBodyScroll } from \"react-use\";\nimport DesktopNav from \"components/navbar/NavBarDesktop\";\nimport MobileNav from \"components/navbar/NavBarMobile\";\nimport { useMedia } from \"../../../context\";\nimport site from \"config\";\nexport default function NavBarEntry() {\n  // Variables\n  const logoBreak = site.global.logoTransitionScroll;\n  const {\n    pathname: location\n  } = useRouter(); //   const [location] = useLocation();\n\n  const isHome = location === \"/\" ? true : false; // State\n\n  const {\n    0: readyToScroll,\n    1: setReadyToScroll\n  } = useState(false);\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(false);\n  const {\n    y\n  } = useWindowScroll(); // Hooks\n\n  const {\n    isSm,\n    isMd\n  } = useMedia();\n  useEffect(() => {\n    isHome && y >= logoBreak && setReadyToScroll(true);\n    isHome && y < logoBreak && setReadyToScroll(false);\n    !isHome && setReadyToScroll(true);\n  }, [isHome, isOpen, logoBreak, y]);\n  useLockBodyScroll(isOpen); // Render\n\n  if (isSm || isMd) {\n    return __jsx(MobileNav, {\n      navOpen: isOpen,\n      setNavOpen: setOpen,\n      pathName: location,\n      doScroll: readyToScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return __jsx(DesktopNav, {\n      doScroll: readyToScroll,\n      pathName: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/src/components/navbar/NavBar.js"],"names":["React","useState","useEffect","useRouter","useWindowScroll","useLockBodyScroll","DesktopNav","MobileNav","useMedia","site","NavBarEntry","logoBreak","global","logoTransitionScroll","pathname","location","isHome","readyToScroll","setReadyToScroll","isOpen","setOpen","y","isSm","isMd"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,WAAnD;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC;AACA,QAAMC,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,oBAA9B;AACA,QAAM;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,MAAyBZ,SAAS,EAAxC,CAHoC,CAIpC;;AACA,QAAMa,MAAM,GAAGD,QAAQ,KAAK,GAAb,GAAmB,IAAnB,GAA0B,KAAzC,CALoC,CAOpC;;AACA,QAAM;AAAA,OAACE,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACkB,MAAD;AAAA,OAASC;AAAT,MAAoBnB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAQjB,eAAe,EAA7B,CAVoC,CAYpC;;AACA,QAAM;AAAEkB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBf,QAAQ,EAA/B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,IAAIK,CAAC,IAAIV,SAAf,IAA4BO,gBAAgB,CAAC,IAAD,CAA5C;AACAF,IAAAA,MAAM,IAAIK,CAAC,GAAGV,SAAd,IAA2BO,gBAAgB,CAAC,KAAD,CAA3C;AACA,KAACF,MAAD,IAAWE,gBAAgB,CAAC,IAAD,CAA3B;AACD,GAJQ,EAIN,CAACF,MAAD,EAASG,MAAT,EAAiBR,SAAjB,EAA4BU,CAA5B,CAJM,CAAT;AAMAhB,EAAAA,iBAAiB,CAACc,MAAD,CAAjB,CApBoC,CAqBpC;;AACA,MAAIG,IAAI,IAAIC,IAAZ,EAAkB;AAChB,WACE,MAAC,SAAD;AACE,MAAA,OAAO,EAAEJ,MADX;AAEE,MAAA,UAAU,EAAEC,OAFd;AAGE,MAAA,QAAQ,EAAEL,QAHZ;AAIE,MAAA,QAAQ,EAAEE,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATD,MASO;AACL,WAAO,MAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA,aAAtB;AAAqC,MAAA,QAAQ,EAAEF,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"wouter\";\nimport { useRouter } from \"next/router\";\nimport { useWindowScroll, useLockBodyScroll } from \"react-use\";\nimport DesktopNav from \"components/navbar/NavBarDesktop\";\nimport MobileNav from \"components/navbar/NavBarMobile\";\nimport { useMedia } from \"../../../context\";\nimport site from \"config\";\n\nexport default function NavBarEntry() {\n  // Variables\n  const logoBreak = site.global.logoTransitionScroll;\n  const { pathname: location } = useRouter();\n  //   const [location] = useLocation();\n  const isHome = location === \"/\" ? true : false;\n\n  // State\n  const [readyToScroll, setReadyToScroll] = useState(false);\n  const [isOpen, setOpen] = useState(false);\n  const { y } = useWindowScroll();\n\n  // Hooks\n  const { isSm, isMd } = useMedia();\n  useEffect(() => {\n    isHome && y >= logoBreak && setReadyToScroll(true);\n    isHome && y < logoBreak && setReadyToScroll(false);\n    !isHome && setReadyToScroll(true);\n  }, [isHome, isOpen, logoBreak, y]);\n\n  useLockBodyScroll(isOpen);\n  // Render\n  if (isSm || isMd) {\n    return (\n      <MobileNav\n        navOpen={isOpen}\n        setNavOpen={setOpen}\n        pathName={location}\n        doScroll={readyToScroll}\n      />\n    );\n  } else {\n    return <DesktopNav doScroll={readyToScroll} pathName={location} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}