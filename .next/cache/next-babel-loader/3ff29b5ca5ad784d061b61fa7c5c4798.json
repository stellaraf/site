{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/ml/dev/stellar/site/components/USMap.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { Box, Tooltip } from '@chakra-ui/core';\nimport { MdMyLocation } from 'react-icons/md';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nconst MarkerIcon = forwardRef(_c = (props, ref) => {\n  return __jsx(Box, _extends({\n    as: MdMyLocation,\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }));\n});\n_c2 = MarkerIcon;\nexport const USMap = forwardRef(_c3 = ({\n  geoData,\n  locations\n}, ref) => {\n  return __jsx(Box, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Geographies, {\n    geography: geoData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, ({\n    geographies\n  }) => __jsx(React.Fragment, null, geographies.map(geo => __jsx(Geography, {\n    key: geo.rsmKey // stroke=\"#FFF\"\n    ,\n    geography: geo,\n    fill: \"#DDD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), locations && locations.map(loc => {\n    if (loc.active) {\n      return __jsx(Marker, {\n        coordinates: [loc.coordinates.lon, loc.coordinates.lat],\n        key: loc.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }\n      }, __jsx(Tooltip, {\n        label: loc.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, __jsx(MarkerIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }\n      })));\n    }\n  })))));\n});\n_c4 = USMap;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MarkerIcon$forwardRef\");\n$RefreshReg$(_c2, \"MarkerIcon\");\n$RefreshReg$(_c3, \"USMap$forwardRef\");\n$RefreshReg$(_c4, \"USMap\");","map":{"version":3,"sources":["/Users/ml/dev/stellar/site/components/USMap.js"],"names":["React","forwardRef","Box","Tooltip","MdMyLocation","ComposableMap","Geographies","Geography","Marker","MarkerIcon","props","ref","USMap","geoData","locations","geographies","map","geo","rsmKey","loc","active","coordinates","lon","lat","id","displayName"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,mBAA9D;AAEA,MAAMC,UAAU,GAAGR,UAAU,MAAC,CAACS,KAAD,EAAQC,GAAR,KAAgB;AAC5C,SAAO,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEP,YAAT;AAAuB,IAAA,GAAG,EAAEO;AAA5B,KAAqCD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAF4B,CAA7B;MAAMD,U;AAIN,OAAO,MAAMG,KAAK,GAAGX,UAAU,OAAC,CAAC;AAAEY,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,EAAyBH,GAAzB,KAAiC;AAC/D,SACE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,UAAU,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA;AAAF,GAAD,KACC,4BACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAClB,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,MADX,CAEE;AAFF;AAGE,IAAA,SAAS,EAAED,GAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EASGH,SAAS,IACRA,SAAS,CAACE,GAAV,CAAcG,GAAG,IAAI;AACnB,QAAIA,GAAG,CAACC,MAAR,EAAgB;AACd,aACE,MAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,CAACD,GAAG,CAACE,WAAJ,CAAgBC,GAAjB,EAAsBH,GAAG,CAACE,WAAJ,CAAgBE,GAAtC,CAArB;AAAiE,QAAA,GAAG,EAAEJ,GAAG,CAACK,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAEL,GAAG,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;AACF,GAVD,CAVJ,CAFJ,CADF,CADF,CADF;AAgCD,CAjC8B,CAAxB;MAAMb,K","sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { Box, Tooltip } from '@chakra-ui/core';\nimport { MdMyLocation } from 'react-icons/md';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\n\nconst MarkerIcon = forwardRef((props, ref) => {\n  return <Box as={MdMyLocation} ref={ref} {...props} />;\n});\n\nexport const USMap = forwardRef(({ geoData, locations }, ref) => {\n  return (\n    <Box ref={ref}>\n      <ComposableMap projection=\"geoAlbersUsa\">\n        <Geographies geography={geoData}>\n          {({ geographies }) => (\n            <>\n              {geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  // stroke=\"#FFF\"\n                  geography={geo}\n                  fill=\"#DDD\"\n                />\n              ))}\n              {locations &&\n                locations.map(loc => {\n                  if (loc.active) {\n                    return (\n                      <Marker coordinates={[loc.coordinates.lon, loc.coordinates.lat]} key={loc.id}>\n                        <Tooltip label={loc.displayName}>\n                          <MarkerIcon />\n                        </Tooltip>\n                      </Marker>\n                    );\n                  }\n                })}\n            </>\n          )}\n        </Geographies>\n      </ComposableMap>\n    </Box>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}